

19/12/17
========

time ./cayley.py gcolor k=600
svn: '.' is not a working copy
metro module failed to load
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
Model(n=15, Lx/z: 1, Gx: 18, Gz: 18, Hx: 4, Hz: 4, Rx/z: 6)

size: 2097152
mulclose: 36
mulclose: 657
mulclose: 7177
mulclose: 50424
mulclose: 227364
mulclose: 656956
mulclose: 1265252
mulclose: 1770920
mulclose: 2018104
mulclose: 2087040
mulclose: 2096640
G: 2097152
building H...

building sparse...
eigsh...

22.000000 22.000000 22.000000 22.000000 22.000000 22.000000
22.000000 22.000000 22.000000 22.000000 22.000000 22.000000
22.000000 22.000000 22.000000 22.000000 22.000000 22.000000
22.000000 22.000000 22.000000 22.000000 22.000000 22.000000
22.000000 22.000000 22.000000 22.000000 22.000000 22.000000
22.000000 22.000000 22.000000 22.000000 22.000000 22.000000
22.000000 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 22.214755 22.214755 22.214755 22.214755 22.214755
22.214755 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 24.000000
24.000000 24.000000 24.000000 24.000000 24.000000 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 25.455844 25.455844 25.455844
25.455844 25.455844 25.455844 26.000000 26.000000 26.000000
26.000000 26.000000 26.000000 26.000000 26.000000 26.000000
26.000000 26.000000 26.000000 26.000000 26.000000 26.000000
26.000000 26.000000 26.000000 26.000000 26.000000 26.000000
26.000000 26.000000 26.000000 26.000000 26.000000 26.000000
26.000000 26.000000 26.000000 26.000000 26.000000 26.000000
26.000000 26.000000 26.000000 28.000000 28.000000 28.000000
28.000000 28.000000 28.000000 28.000000 28.000000 28.000000
28.000000 28.000000 28.000000 28.000000 28.000000 28.000000
28.000000 28.000000 28.000000 28.000000 28.000000 28.000000
28.000000 28.000000 28.000000 30.000000 30.000000 30.000000
30.000000 30.000000 30.000000 30.000000 30.000000 30.000000
30.000000 30.000000 30.000000 30.000000 30.000000 30.000000
30.000000 30.000000 30.000000 30.000000 30.000000 36.000000




A function is said to be an equivariant map when its
domain and codomain are acted on by the same symmetry
group, and when the function commutes with the action
of the group.


THE GEOMETRY OF DRUMS
KOEN THAS
https://arxiv.org/pdf/1712.05448.pdf
http://cage.ugent.be/~kthas/


"Every connected regular graph of even degree is a Schreier coset graph"
Jonathan LGross
1977

Hint: decompose k-regular graph into union of k/2 cycles, each of which
partition the vertex set. Choose as group the permutation group on
the vertices, with k/2 generators corresponding to the cycles.

https://terrytao.wordpress.com/2011/12/02/245b-notes-1-basic-theory-of-expander-graphs/
https://terrytao.wordpress.com/2011/12/06/254b-notes-2-cayley-graphs-and-kazhdans-property-t/#more-5533


SCHREIER COSET GRAPHS AND THEIR APPLICATIONS
Marston Conder
1992

Hecke Groups, Dessins d’Enfants and the Archimedean Solids
Yang-Hui He1,2∗ and James Read1†
https://arxiv.org/pdf/1309.2326.pdf



16/12/17
========

ising model: 
    top eval / l
>>> 7.727 / 6
    1.2878333333333334
>>> 15.32 / 12
    1.2766666666666666
>>> 25.49 / 20
    1.2745
>>> 30.5795/24
    1.2741458333333333


./cayley.py ising l=6 k=100
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 1, Hz: 0, Rx/z: 5)

size: 4096
G: 4096
[  7.46410162   7.46410162   7.46410162   7.46410162   7.46410162
   7.46410162   7.46410162   7.46410162   7.46410162   7.46410162
   7.46410162   7.46410162   7.46410162   7.46410162   7.46410162
   7.46410162   7.46410162   7.46410162   7.46410162   7.46410162
   7.46410162   7.46410162   7.46410162   7.46410162   7.46410162
   7.46410162   7.46410162   7.46410162   7.46410162   7.46410162
   7.46410162   7.72740661   7.72740661   7.72740661   7.72740661
   7.72740661   7.72740661   7.72740661   7.72740661   7.72740661
   7.72740661   7.72740661   7.72740661   7.72740661   7.72740661
   7.72740661   7.72740661   7.72740661   7.72740661   7.72740661
   7.72740661   7.72740661   7.72740661   7.72740661   7.72740661
   7.72740661   7.72740661   7.72740661   7.72740661   7.72740661
   7.72740661   7.72740661   7.72740661   8.           8.           8.           8.
   8.           8.           8.           8.           8.           8.           8.
   8.           8.           8.           8.           8.           8.           8.
   8.           8.           8.           8.           8.           8.           8.
   8.           8.           8.           8.           8.          10.          10.
  10.          10.          10.          10.          12.        ]

./zorbit.py find_ideals ising l=6 excite solve dual verbose
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 0, Hz: 1, Rx/z: 5)
11.... 1.....
.11... .1....
..11.. ..1...
...11. ...1..
....11 ....1.
1....1 .....1
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 0, Hz: 1, Rx/z: 5)
('find_ideals:', 1)
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 1, Hz: 0, Rx/z: 5)
('excites', [array([1], dtype=int32)])
[]
[]
('eval_1:', 7.7274066103125483)
('eval_2:', 5.6568542494923832)
('top:', 7.7274066103125483)


./zorbit.py find_ideals ising l=6 excite solve dual verbose
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 0, Hz: 1, Rx/z: 5)
11.... 1.....
.11... .1....
..11.. ..1...
...11. ...1..
....11 ....1.
1....1 .....1
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 0, Hz: 1, Rx/z: 5)
('find_ideals:', 1)
Model(n=6, Lx/z: 0, Gx: 6, Gz: 6, Hx: 0, Hz: 1, Rx/z: 5)
('excites', [array([1], dtype=int32)])
[1]
[[1]]
('eval_1:', 7.4641016151377517)
('eval_2:', 5.4641016151377562)
('top:', 7.4641016151377517)


13/12/17
========

./orbigraph.py 
[[ 0.  1.  0.  0.  0.  0.  0.  1.]
 [ 1.  0.  1.  0.  0.  0.  0.  0.]
 [ 0.  1.  0.  1.  0.  0.  0.  0.]
 [ 0.  0.  1.  0.  1.  0.  0.  0.]
 [ 0.  0.  0.  1.  0.  1.  0.  0.]
 [ 0.  0.  0.  0.  1.  0.  1.  0.]
 [ 0.  0.  0.  0.  0.  1.  0.  1.]
 [ 1.  0.  0.  0.  0.  0.  1.  0.]]
[ -2.00000000e+00  -1.41421356e+00  -1.41421356e+00  -1.24950495e-16
   0.00000000e+00   1.41421356e+00   1.41421356e+00   2.00000000e+00]
 0.35 -0.45  0.23  0.50  0.00 -0.00 -0.50  0.35
-0.35  0.48  0.15  0.00  0.50  0.35 -0.35  0.35
 0.35 -0.23 -0.45 -0.50 -0.00  0.50 -0.00  0.35
-0.35 -0.15  0.48 -0.00 -0.50  0.35  0.35  0.35
 0.35  0.45 -0.23  0.50  0.00  0.00  0.50  0.35
-0.35 -0.48 -0.15 -0.00  0.50 -0.35  0.35  0.35
 0.35  0.23  0.45 -0.50  0.00 -0.50 -0.00  0.35
-0.35  0.15 -0.48  0.00 -0.50 -0.35 -0.35  0.35


12/12/17
========

verifying that the 
eigenvalues of the cayley graph contain the eigenvalues of the Hamiltonian:

simon@hero:~/home/github/spectrum2015$ time ./cayley.py compass l=3
Model(n=9, Lx/z: 1, Gx: 9, Gz: 9, Hx: 2, Hz: 2, Rx/z: 4)

size: 8192
G: 8192
[ 10.2459954   10.2459954   10.2459954   10.2459954   10.2459954
  11.21110255  11.21110255  11.21110255  11.21110255  11.21110255
  11.21110255  11.21110255  11.21110255  11.21110255  11.21110255
  11.21110255  11.21110255  11.21110255  11.21110255  11.21110255
  11.21110255  14.          14.          14.          14.          14.          14.
  14.          14.          14.          14.          14.          14.          14.
  14.          14.          14.          14.          14.          18.        ]

from zorbit:
('top:', 11.211102550927979)
('top:', 10.245995402738568) # 1st excited



11/12/17
========

Minimum length paths:
stabilizer weight  8 : 2, 2, 2
stabilizer weight 12 : 3, 2, 3
stabilizer weight 18 : 3, 4, 4
stabilizer weight 24 : 4, 6, 4


./models.py gcolor size=3 | grep sum | sort -n
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6
sx.sum() = 8 u.sum() = 2 u.sum() = 2 u.sum() = 2 u.sum() = 6

sx.sum() = 12 u.sum() = 3 u.sum() = 2 u.sum() = 3 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 2 u.sum() = 3 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 2 u.sum() = 3 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 2 u.sum() = 3 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8
sx.sum() = 12 u.sum() = 3 u.sum() = 3 u.sum() = 2 u.sum() = 8

sx.sum() = 18 u.sum() = 3 u.sum() = 4 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 3 u.sum() = 4 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 3 u.sum() = 4 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 3 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 3 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 3 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 3 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 3 u.sum() = 4 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 4 u.sum() = 3 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 4 u.sum() = 3 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 4 u.sum() = 3 u.sum() = 11
sx.sum() = 18 u.sum() = 4 u.sum() = 4 u.sum() = 3 u.sum() = 11

sx.sum() = 24 u.sum() = 4 u.sum() = 6 u.sum() = 4 u.sum() = 14
sx.sum() = 24 u.sum() = 4 u.sum() = 6 u.sum() = 4 u.sum() = 14
sx.sum() = 24 u.sum() = 6 u.sum() = 4 u.sum() = 4 u.sum() = 14
sx.sum() = 24 u.sum() = 6 u.sum() = 4 u.sum() = 4 u.sum() = 14




10/12/17
========

gauge operators add to build the stabilizers:
./models.py gcolor size=2
metro module failed to load
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
Model(n=65, Lx/z: 1, Gx: 80, Gz: 80, Hx: 16, Hz: 16, Rx/z: 32)
8 2 :
1.1.1.1..........................................................
.1.1.1.1.........................................................

8 2 :
1111.............................................................
........1111.....................................................

18 4 :
........1111.....................................................
............11..11...............................................
..............11..11..11.........................................
....................11..11.......................................

8 2 :
............11............11.....................................
..............11............11...................................

8 2 :
............11............11.....................................
................11............11.................................

12 3 :
................................1111.............................
....................................1.1.1.1......................
.....................................1.1.1.1.....................

8 2 :
................................11..........11...................
..................................11..........11.................

8 2 :
................................................1111.............
....................................................1111.........

18 4 :
11..11...........................................................
........11........1111...........................................
....................................1111.........................
................................................1111.............

18 4 :
..............11............11...................................
................................11..........11...................
..................1...1.............1...1...............11.......
...................1...1.............1...1.......................

12 3 :
....................11..........................11...............
........................11................................11.....
....................................................11......11...

12 3 :
............1...1.........1...1..................................
..............1.......1.....1...........................1........
........................11................................11.....

8 2 :
................................1.1.........1.1..................
........................................1.1..............1....1..

8 2 :
....................................................1.1.....1..1.
.....................................................1.1.....1..1

18 4 :
..................1.1...............1.1.........1.1..............
......................1.1...............................1.1......
........................................1.1..............1....1..
....................................................1.1.....1..1.

12 3 :
1.1.1.1..........................................................
........1.1........1...1.........................................
.....................................1.1.1.1.....................


from size=3 gcolor code: 
gauge weight of stabilizer (distance from the zero potential well)
doesn't matter, only weight of stabilizer!



7/12/17
=======

this has 2l ideals... not sure what this means...
time ./zorbit.py xy21 l=10 find_ideals solve 
Model(n=100, Lx/z: 0, Gx: 200, Gz: 200, Hx: 10, Hz: 10, Rx/z: 80)
('find_ideals:', 20)
Model(n=100, Lx/z: 94, Gx: 10, Gz: 10, Hx: 1, Hz: 1, Rx/z: 4)
...
('eval_1:', 258.88543819998301)
('eval_2:', 253.94116628998387)

excite:
('top:', 257.61836267738676)

l=14:
('eval_1:', 503.32343123271295)
('eval_2:', 499.76309628941192)
('top:', 502.42204771351209)



time ./zorbit.py xy2 l=12 find_ideals solve slepc nev=2 excite eps_tol=1e-6 > zorbit.out &
('top:', 165.009972) 



5/12/17
=======



time nice ./zorbit.py find_ideals xy2 l=12 slepc solve nev=5 eps_tol=1e-8
no pyx module found
Model(n=144, Lx/z: 2, Gx: 144, Gz: 144, Hx: 21, Hz: 21, Rx/z: 100)
('find_ideals:', 4)
Model(n=144, Lx/z: 97, Gx: 36, Gz: 36, Hx: 11, Hz: 11, Rx/z: 25)
Model(n=144, Lx/z: 97, Gx: 36, Gz: 36, Hx: 11, Hz: 11, Rx/z: 25)
Model(n=144, Lx/z: 97, Gx: 36, Gz: 36, Hx: 11, Hz: 11, Rx/z: 25)
Model(n=144, Lx/z: 97, Gx: 36, Gz: 36, Hx: 11, Hz: 11, Rx/z: 25)
('excite:', None)
slepc: name=ex3.tmp.c
('hash(src):', 4134961785832330221)
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 1e-08 
('vals:', [41.410454, 40.585673, 38.136067, 37.899172, 36.765622])
slepc: name=ex3.tmp.c
('hash(src):', -314668492714511423)
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 1e-08 
('vals:', [41.410454, 40.585673, 38.136067, 37.899172, 36.765622])
slepc: name=ex3.tmp.c
('hash(src):', 6500869556847474201)
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 1e-08 
('vals:', [41.410454, 40.585673, 38.136067, 37.899172, 36.765622])
slepc: name=ex3.tmp.c
('hash(src):', -4873886431300345855)
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 1e-08 
('vals:', [41.410454, 40.585673, 38.136067, 37.899172, 36.765622])
('eval_1:', 165.641816)
('eval_2:', 164.817035)
('top:', 165.641816)

real144m11.806s

time ./zorbit.py xy2 l=12 find_ideals solve slepc nev=2 excite eps_tol=1e-4
...
('top:', 165.00996800000001)
real 675m


4/12/17
=======

time ./zorbit.py find_ideals xy2 l=10  solve sparse
Model(n=100, Lx/z: 2, Gx: 100, Gz: 100, Hx: 17, Hz: 17, Rx/z: 64)
('find_ideals:', 4)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
('excite:', None)
span: 65536
building H. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
nnz: 1638400
span: 65536
building H. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
nnz: 1638400
span: 65536
building H. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
nnz: 1638400
span: 65536
building H. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
nnz: 1638400
('eval_1:', 116.30480002056763)
('eval_2:', 114.82587988995313)
('top:', 116.30480002056763)

real4m4.679s
user8m44m4.012s
system0m0.652s

time ./zorbit.py find_ideals xy2 l=10  solve sparse excite
...
('top:', 115.40040840619469)




~~~~~~~~~~~~~~~~~~~~~~~~~~


time ./zorbit.py find_ideals xy2 l=10 nev=2
Model(n=100, Lx/z: 2, Gx: 100, Gz: 100, Hx: 17, Hz: 17, Rx/z: 64)
('find_ideals:', 4)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
Model(n=100, Lx/z: 66, Gx: 25, Gz: 25, Hx: 9, Hz: 9, Rx/z: 16)
('excite:', None)
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_tol 0.0001 
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
Hamiltonian Eigenproblem (matrix-free version), n=65536
EPSSetInitialSpace
EPSSolve
 Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 16
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
       29.076200            6.77232e-05
       27.597280             4.9203e-05
 ---------------------- --------------------
...

('eval_1:', 116.3048)
('eval_2:', 114.82588)
('top:', 116.3048)



('eval_1:', 114.578612)
('eval_2:', 112.588497)
('top:', 114.578612)

time ./zorbit.py find_ideals xy2 l=10 nev=2 excite


~~~~~~~~~~~~~~~~~~~~~~~~~


time ./zorbit.py find_ideals gcolor size=4
metro module failed to load
guage ops: 448
qubits: 369
stabs: 80
Lattice(3:369, 2:736, 1:448, 0:80)
Model(n=369, Lx/z: 1, Gx: 448, Gz: 448, Hx: 80, Hz: 80, Rx/z: 208)
('find_ideals:', 6)
Model(n=369, Lx/z: 259, Gx: 70, Gz: 70, Hx: 40, Hz: 40, Rx/z: 30)
Model(n=369, Lx/z: 259, Gx: 70, Gz: 70, Hx: 40, Hz: 40, Rx/z: 30)
Model(n=369, Lx/z: 245, Gx: 84, Gz: 84, Hx: 40, Hz: 40, Rx/z: 44)
Model(n=369, Lx/z: 245, Gx: 84, Gz: 84, Hx: 40, Hz: 40, Rx/z: 44)
Model(n=369, Lx/z: 259, Gx: 70, Gz: 70, Hx: 40, Hz: 40, Rx/z: 30)
Model(n=369, Lx/z: 259, Gx: 70, Gz: 70, Hx: 40, Hz: 40, Rx/z: 30)

time ./zorbit.py find_ideals gcolor size=3
metro module failed to load
guage ops: 214
qubits: 175
stabs: 40
Lattice(3:175, 2:348, 1:214, 0:40)
Model(n=175, Lx/z: 1, Gx: 214, Gz: 214, Hx: 40, Hz: 40, Rx/z: 94)
('find_ideals:', 6)
Model(n=175, Lx/z: 121, Gx: 34, Gz: 34, Hx: 20, Hz: 20, Rx/z: 14)
Model(n=175, Lx/z: 121, Gx: 34, Gz: 34, Hx: 20, Hz: 20, Rx/z: 14)
Model(n=175, Lx/z: 116, Gx: 39, Gz: 39, Hx: 20, Hz: 20, Rx/z: 19)
Model(n=175, Lx/z: 116, Gx: 39, Gz: 39, Hx: 20, Hz: 20, Rx/z: 19)
Model(n=175, Lx/z: 121, Gx: 34, Gz: 34, Hx: 20, Hz: 20, Rx/z: 14)
Model(n=175, Lx/z: 121, Gx: 34, Gz: 34, Hx: 20, Hz: 20, Rx/z: 14)

time ./zorbit.py find_ideals gcolor size=2
metro module failed to load
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
Model(n=65, Lx/z: 1, Gx: 80, Gz: 80, Hx: 16, Hz: 16, Rx/z: 32)
('find_ideals:', 6)
Model(n=65, Lx/z: 44, Gx: 13, Gz: 13, Hx: 8, Hz: 8, Rx/z: 5)
Model(n=65, Lx/z: 43, Gx: 14, Gz: 14, Hx: 8, Hz: 8, Rx/z: 6)
Model(n=65, Lx/z: 44, Gx: 13, Gz: 13, Hx: 8, Hz: 8, Rx/z: 5)
Model(n=65, Lx/z: 43, Gx: 14, Gz: 14, Hx: 8, Hz: 8, Rx/z: 6)
Model(n=65, Lx/z: 44, Gx: 13, Gz: 13, Hx: 8, Hz: 8, Rx/z: 5)
Model(n=65, Lx/z: 44, Gx: 13, Gz: 13, Hx: 8, Hz: 8, Rx/z: 5)

time ./zorbit.py find_ideals gcolor size=1
metro module failed to load
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
Model(n=15, Lx/z: 1, Gx: 18, Gz: 18, Hx: 4, Hz: 4, Rx/z: 6)
('find_ideals:', 6)
Model(n=15, Lx/z: 10, Gx: 3, Gz: 3, Hx: 2, Hz: 2, Rx/z: 1)
Model(n=15, Lx/z: 10, Gx: 3, Gz: 3, Hx: 2, Hz: 2, Rx/z: 1)
Model(n=15, Lx/z: 10, Gx: 3, Gz: 3, Hx: 2, Hz: 2, Rx/z: 1)
Model(n=15, Lx/z: 10, Gx: 3, Gz: 3, Hx: 2, Hz: 2, Rx/z: 1)
Model(n=15, Lx/z: 10, Gx: 3, Gz: 3, Hx: 2, Hz: 2, Rx/z: 1)
Model(n=15, Lx/z: 10, Gx: 3, Gz: 3, Hx: 2, Hz: 2, Rx/z: 1)




3/12/17
=======




time ./zorbit.py find_ideals xy3 l=10
Model(n=1000, Lx/z: 54, Gx: 1000, Gz: 1000, Hx: 217, Hz: 217, Rx/z: 512)
('find_ideals:', 8)
Model(n=1000, Lx/z: 814, Gx: 125, Gz: 125, Hx: 61, Hz: 61, Rx/z: 64)

time ./zorbit.py find_ideals xy3 l=8
Model(n=512, Lx/z: 42, Gx: 512, Gz: 512, Hx: 127, Hz: 127, Rx/z: 216)
('find_ideals:', 8)
Model(n=512, Lx/z: 411, Gx: 64, Gz: 64, Hx: 37, Hz: 37, Rx/z: 27)

time ./zorbit.py find_ideals xy3 l=6
Model(n=216, Lx/z: 30, Gx: 216, Gz: 216, Hx: 61, Hz: 61, Rx/z: 64)
('find_ideals:', 8)
Model(n=216, Lx/z: 170, Gx: 27, Gz: 27, Hx: 19, Hz: 19, Rx/z: 8)

time ./zorbit.py find_ideals xy3 l=4
Model(n=64, Lx/z: 18, Gx: 64, Gz: 64, Hx: 19, Hz: 19, Rx/z: 8)
('find_ideals:', 8)
Model(n=64, Lx/z: 49, Gx: 8, Gz: 8, Hx: 7, Hz: 7, Rx/z: 1)








2/12/17
=======


time nice ./zorbit.py find_ideals xy2 l=10 solve sparse 
Model(n=100, Lx/z: 2, Gx: 100, Gz: 100, Hx: 17, Hz: 17, Rx/z: 64)
('find_ideals:', 4)
...
('top:', 116.30480002056763)



took a day to run:
    time nice ./zorbit.py find_ideals xy2 l=10 solve sparse excite exciteall
    ...
    ('top:', 115.40040840619493)


./zorbit.py find_ideals xy2 l=8
('excite:', None)
Model(n=64, Lx/z: 2, Gx: 64, Gz: 64, Hx: 13, Hz: 13, Rx/z: 36)
('find_ideals:', 4)
Model(n=64, Lx/z: 41, Gx: 16, Gz: 16, Hx: 7, Hz: 7, Rx/z: 9)
Model(n=64, Lx/z: 41, Gx: 16, Gz: 16, Hx: 7, Hz: 7, Rx/z: 9)
Model(n=64, Lx/z: 41, Gx: 16, Gz: 16, Hx: 7, Hz: 7, Rx/z: 9)
Model(n=64, Lx/z: 41, Gx: 16, Gz: 16, Hx: 7, Hz: 7, Rx/z: 9)
('eval_1:', 76.051613166827607)
('eval_2:', 73.374414524895386)

excite:
time ./zorbit.py find_ideals xy2 l=8  solve sparse excite exciteall
...
('top:', 74.764406214392721)




time ./zorbit.py find_ideals xy2 l=6 
111111111111........................ 111111111111........................
......111111111111.................. ......111111111111..................
............111111111111............ ............111111111111............
..................111111111111...... ..................111111111111......
11....11....11....11....11....11.... 11....11....11....11....11....11....
.11....11....11....11....11....11... .11....11....11....11....11....11...
..11....11....11....11....11....11.. ..11....11....11....11....11....11..
...11....11....11....11....11....11. ...11....11....11....11....11....11.
1111..1111..1111..1111......11....11 1111..1111..1111..1111......11....11
Model(n=36, Lx/z: 2, Gx: 36, Gz: 36, Hx: 9, Hz: 9, Rx/z: 16)
('find_ideals:', 4)
[0, 2, 4, 12, 14, 16, 24, 26, 28, 43, 45, 47, 55, 57, 59, 67, 69, 71]
Model(n=36, Lx/z: 22, Gx: 9, Gz: 9, Hx: 5, Hz: 5, Rx/z: 4)
[1, 3, 5, 13, 15, 17, 25, 27, 29, 42, 44, 46, 54, 56, 58, 66, 68, 70]
Model(n=36, Lx/z: 22, Gx: 9, Gz: 9, Hx: 5, Hz: 5, Rx/z: 4)
[6, 8, 10, 18, 20, 22, 30, 32, 34, 37, 39, 41, 49, 51, 53, 61, 63, 65]
Model(n=36, Lx/z: 22, Gx: 9, Gz: 9, Hx: 5, Hz: 5, Rx/z: 4)
[7, 9, 11, 19, 21, 23, 31, 33, 35, 36, 38, 40, 48, 50, 52, 60, 62, 64]
Model(n=36, Lx/z: 22, Gx: 9, Gz: 9, Hx: 5, Hz: 5, Rx/z: 4)
('excite:', None)
('eval_1:', 44.844410203711917)
('eval_2:', 39.633307652783941)


excite:
('top:', 42.914195907333095)





18/1/17
=======


self-dual code on 2d square lattice. gauge ops are the squares

time ./zorbit.py xy2 l=6 nev=5 slepc 
(2, 36) (36, 36)
n = 36
Lx Lz:
..............................111111 ..............................111111
.....1.....1.....1.....1.....111111. .....1.....1.....1.....1.....111111.
Hx: 9 Hz: 9
Gx: 36 Gz: 36
Rx: 16 Rz: 16
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 0.0001 
Hamiltonian Eigenproblem (matrix-free version), n=65536
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 4
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       44.844410            1.78126e-06
/\       39.633308            3.21454e-05
/\       34.422205            1.21036e-05
/\       30.422205            4.57728e-05
/\       29.211102            4.30912e-05
 ---------------------- --------------------

time ./zorbit.py xy2 l=6 nev=5 slepc excite=0
(2, 36) (36, 36)
n = 36
Lx Lz:
..............................111111 ..............................111111
.....1.....1.....1.....1.....111111. .....1.....1.....1.....1.....111111.
Hx: 9 Hz: 9
Gx: 36 Gz: 36
Rx: 16 Rz: 16
slepc: name=ex3.tmp.c
excite: 0
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 0.0001 
Hamiltonian Eigenproblem (matrix-free version), n=65536
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 10
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       41.667011            3.19313e-05
/\       36.737356            7.56091e-05
/\       33.067037            1.97039e-05
/\       31.807702            5.74228e-05
/\       29.968667            4.54468e-05
 ---------------------- --------------------

time ./zorbit.py xy2 l=6 nev=5 slepc excite=1
(2, 36) (36, 36)
n = 36
Lx Lz:
..............................111111 ..............................111111
.....1.....1.....1.....1.....111111. .....1.....1.....1.....1.....111111.
Hx: 9 Hz: 9
Gx: 36 Gz: 36
Rx: 16 Rz: 16
slepc: name=ex3.tmp.c
excite: 1
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 0.0001 
Hamiltonian Eigenproblem (matrix-free version), n=65536
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 9
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       42.914196            3.26408e-05
/\       37.703093            6.77229e-06
/\       36.253554            8.63077e-05
/\       32.491991            3.61547e-05
/\       31.892910            8.49631e-05
 ---------------------- --------------------


time ./zorbit.py xy2 li=6 lj=7 nev=5 slepc 
no pyx module found
(6, 42) (42, 42)
n = 42
Lx Lz:
......1111111.111111.111111.111111.111111. ......1111111.111111.111111.111111.111111.
.......11111111111111111111111111111111111 .......11111111111111111111111111111111111
.......1111111............................ .......1111111............................
..............1111111..................... ..............1111111.....................
.....................1111111.............. .....................1111111..............
............................1111111....... ............................1111111.......
Hx: 6 Hz: 6
Gx: 42 Gz: 42
Rx: 24 Rz: 24
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_tol 0.0001 
Hamiltonian Eigenproblem (matrix-free version), n=16777216
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 12
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       50.108395            9.99129e-05
/\       48.046448             7.5631e-05
/\       45.984501            2.52675e-05
/\       43.039333             7.1521e-05
/\       42.563657            8.54252e-05
 ---------------------- --------------------

time ./zorbit.py xy2 li=6 lj=7 nev=3 slepc excite=0
no pyx module found
(6, 42) (42, 42)
n = 42
Lx Lz:
......1111111.111111.111111.111111.111111. ......1111111.111111.111111.111111.111111.
.......11111111111111111111111111111111111 .......11111111111111111111111111111111111
.......1111111............................ .......1111111............................
..............1111111..................... ..............1111111.....................
.....................1111111.............. .....................1111111..............
............................1111111....... ............................1111111.......
Hx: 6 Hz: 6
Gx: 42 Gz: 42
Rx: 24 Rz: 24
slepc: name=ex3.tmp.c
excite: 0
./ex3.tmp -eps_nev 3 -eps_ncv 6 -eps_largest_real -eps_tol 0.0001 
Hamiltonian Eigenproblem (matrix-free version), n=16777216
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 3
 Linear eigensolve converged (3 eigenpairs) due to CONVERGED_TOL; iterations 22
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       48.368023             7.7608e-05
/\       44.785214            9.19959e-05
/\       43.742289            0.000100637
 ---------------------- --------------------








14/1/16
=======

self-dual code on 2d triangular lattice. gauge ops are the triangles
Gapless.

./symplectic.py hex search_roots
C_64


time ./zorbit.py hex slepc nev=5 li=5 lj=4 plot=pic-hex-0.pdf
time ./zorbit.py hex slepc nev=5 li=5 lj=4 plot=pic-hex-1.pdf ev_idx=1

n = 20
Hx: 0 Hz: 0
Gx: 40 Gz: 40
Rx: 20 Rz: 20
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       42.176820            4.68744e-06
/\       41.970030            5.57421e-06
/\       34.346173            4.68786e-05
/\       33.403704            3.48592e-06
/\       33.403704            2.63437e-05
/\       33.372212            2.15558e-05
/\       33.372212            3.00802e-05
/\       32.740705            4.50854e-05
/\       32.653982            6.47063e-05
/\       32.653981            6.40537e-05
/\       32.621749            2.67009e-05
/\       32.621748            5.67533e-05
/\       32.334744            9.47333e-05
/\       32.286708             3.1356e-06
/\       32.178140            3.95588e-05
/\       32.090130             2.7697e-06
/\       31.976437            1.84966e-05
/\       31.882617            1.20526e-05
/\       31.864281            9.61514e-06
/\       31.861127              1.017e-05
/\       31.746886            2.01319e-05
/\       30.715250            4.35215e-06
/\       30.277239            2.33447e-06
 ---------------------- --------------------

time ./zorbit.py hex slepc nev=20 l=5
n = 25
Hx: 0 Hz: 0
Gx: 50 Gz: 50
Rx: 25 Rz: 25
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       52.635690            1.43966e-10
/\       52.540076            1.61155e-10
/\       44.836406            2.81461e-06
/\       43.314972            1.74441e-05
/\       43.314956            2.72723e-05
/\       42.955853            3.13819e-05
/\       42.451560            7.42963e-06
/\       42.008276            2.11732e-06
/\       41.957976            9.19203e-06
/\       41.931296              9.992e-06
/\       41.523613            1.01221e-05
/\       41.493100             7.8387e-06
/\       39.768574            1.60135e-05
/\       38.952974            3.16246e-05
/\       38.524171             7.1724e-06
/\       38.148419            4.64596e-06
/\       37.857195              6.153e-06
/\       37.165837            6.46891e-06
/\       36.716037            7.98969e-06
/\       36.495575            7.16481e-05
/\       36.397040            4.68618e-05
 ---------------------- --------------------


./zorbit.py hex slepc nev=20 l=5 open
Lx Lz:
.11.111.111.11..11.111.11 .11.111.111.11..11.111.11
Hx: 1 Hz: 1
Gx: 32 Gz: 32
Rx: 22 Rz: 22
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       34.926000            1.06613e-05
/\       34.699534            2.21878e-05
/\       33.349795            1.12016e-06
/\       33.316186            1.59954e-05
/\       33.128858            1.68208e-06
/\       33.125478            4.64346e-05
/\       31.734677            8.05634e-06
/\       31.717532            8.04365e-06
/\       31.353487            4.43314e-06
/\       31.346318            2.13569e-05
/\       31.205411            2.01006e-05
/\       31.110792            5.64034e-05
/\       30.826277            6.07524e-06
/\       30.812840            4.28446e-05
/\       30.737450            3.73583e-05
/\       30.392904             4.6013e-06
/\       30.238024            3.68311e-06
/\       29.858290            4.44379e-05
/\       29.807374            3.39537e-05
/\       29.606593            6.74889e-05
 ---------------------- --------------------

./zorbit.py hex slepc nev=2 li=5 lj=5  open excite=0
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       34.814809             6.3131e-05
/\       33.260534            9.99836e-05
 ---------------------- --------------------






12/1/17
=======

time ./symplectic.py random_nostabs n=7 seed=0 search_roots
B_64 = so_129, *OR*
C_64 = sp_128
search_roots 64 8192
...
eigs: 127
roots: 127
real 21m5.115s


time ./symplectic.py random_nostabs n=6 seed=4 search_roots
D_32 = so_64
search_roots 32 1984
eigs: 62
roots: 62



11/1/17
=======

time ./symplectic.py random_nostabs n=8 m=7 h=1 seed=69 search_roots all_roots
eigs: 4033
roots: 2048
C_32 (mostly short roots)

time ./symplectic.py random_nostabs n=8 m=7 h=1 seed=69 search_roots all_roots
eigs: 4033
roots: 2048
C_32 
eigs: 63
roots: 63 # 2*31 short roots, one long root.... +/- simple short roots + long root?


time ./zorbit.py random_nostabs n=20 slepc nev=6 m=20 coweight=5 seed=3
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       21.136010            9.16823e-05
/\       21.098691             9.2608e-06
/\       19.429145            9.00655e-05
/\       19.414263            0.000100282
/\       19.406312             9.9198e-05
/\       19.403075            9.77246e-05
 ---------------------- --------------------

time ./zorbit.py random_nostabs n=20 slepc nev=6 m=20 coweight=3 seed=2 
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       22.080003            7.69795e-05
/\       21.989808            4.26663e-05
/\       20.942108            9.78816e-05
/\       20.887862            9.23828e-05
/\       20.869528            0.000100122
/\       20.860112             4.1152e-05
 ---------------------- --------------------

time ./zorbit.py random_nostabs n=20 slepc nev=6 m=20 coweight=7 seed=3
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       21.148345            6.23192e-05
/\       21.100704            1.08721e-05
/\       19.438228            9.72865e-05
/\       19.428396            9.64144e-05
/\       19.412269            0.000100003
/\       19.406645            9.40092e-05
 ---------------------- --------------------




10/1/17
=======



time ./zorbit.py random_selfdual n=22 slepc nev=5 eps_tol=0.0001 seed=0
 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 337
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       23.519784            9.30076e-05
/\       23.489387            2.25245e-05
/\       21.922052            9.80731e-05
/\       21.910055            0.000103358
/\       21.906982            9.94174e-05
 ---------------------- --------------------

time ./zorbit.py random_selfdual n=22 slepc nev=5 eps_tol=0.0001 seed=1
Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 128
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       23.709621             7.2403e-05
/\       23.674844            8.37842e-05
/\       22.608333            9.99695e-05
/\       22.578957            5.98228e-05
/\       22.103010            0.000101265
 ---------------------- --------------------




time ./zorbit.py random_selfdual n=20 slepc seed=0 nev=5 eps_tol=0.0001
 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 188
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       21.792634            8.28542e-05
/\       21.736621             2.2828e-05
/\       20.389528             9.7056e-05
/\       20.365643            9.33963e-05
/\       20.290360            0.000102516
 ---------------------- --------------------





model = "random_nostabs n=8 weight=3 m=7 h=1 "
$ ./parse_sy.py logfile.run_symplectic.out  
      D_32: 8.5513, +/- 0.2045, count=195
      A_63: 8.4985, +/- 0.1886, count=1089
 B_32 C_32: 9.0333, +/- 0.1410, count=13
  A_31 A_1: 8.9289, +/- 0.1677, count=3

$ ./parse_sy.py logfile.run_symplectic.out  gap0 # <-- vacuum gap
      D_32: 0.9603, +/- 0.1754, count=195
      A_63: 0.9695, +/- 0.1605, count=1089
 B_32 C_32: 1.0012, +/- 0.1573, count=13
  A_31 A_1: 1.2707, +/- 0.1095, count=3

$ ./parse_sy.py logfile.run_symplectic.out  gap
      D_32: 0.4861, +/- 0.1932, count=195
      A_63: 0.4527, +/- 0.1509, count=1089
 B_32 C_32: 0.8627, +/- 0.2200, count=13
  A_31 A_1: 0.5094, +/- 0.0978, count=3




stabilizer misses 2nd eval:

./symplectic.py test_model ideals random_nostabs n=9 weight=3 m=8 h=1  seed=38
A_127
./zorbit.py slepc run random_nostabs n=9 weight=3 m=8 h=1  show nev=5 seed=38 
[10.097567, 9.33573, 8.780509, 8.675319, 8.338299]
./zorbit.py slepc run random_nostabs n=9 weight=3 m=8 h=1  show nev=1 excite=0 seed=38 
[9.294884]



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

./symplectic.py test_model random_nostabs ideals n=7 forever weight=3
B/C_64

./symplectic.py test_model random_nostabs ideals n=5 weight=3  roots
C_16

./symplectic.py test_model random_nostabs ideals n=8 m=7 hx=1 hz=1 forever weight=3
A_63 or D_32

./symplectic.py test_model random_nostabs ideals n=8 m=6 h=2 forever weight=3
A_15 or D_8

./symplectic.py test_model random_nostabs ideals n=8 m=5 h=3 forever weight=3
mostly A_3

./symplectic.py test_model random_nostabs ideals n=9 m=8 h=1 forever weight=3
mostly A_127, otherwise B/C_64


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

time ./zorbit.py  random_nostabs n=16  slepc run nev=20 p=0.5 show   weight=3  eps_tol=0.0001 plot=pic-random-spectrum.pdf seed=0


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Usually the gap comes from a frustrated stabilizer.
Below is a counter-example.

see eigenvalue plots for the first four eigenvalues:
pic-random-spectrum-0.pdf  pic-random-spectrum-2.pdf
pic-random-spectrum-1.pdf  pic-random-spectrum-3.pdf

 ./zorbit.py random_nostabs n=20 m=19 weight=3 hz=1 hx=1 slepc run nev=5 eps_tol=0.0001 seed=25 show plot=pic-random-spectrum-0.pdf nev=1
 ./zorbit.py random_nostabs n=20 m=19 weight=3 hz=1 hx=1 slepc run nev=5 eps_tol=0.0001 seed=25 show plot=pic-random-spectrum-1.pdf nev=3 ev_idx=1
 ./zorbit.py random_nostabs n=20 m=19 weight=3 hz=1 hx=1 slepc run nev=5 eps_tol=0.0001 seed=25 show plot=pic-random-spectrum-2.pdf nev=3 ev_idx=2
 ./zorbit.py random_nostabs n=20 m=19 weight=3 hz=1 hx=1 slepc run nev=5 eps_tol=0.0001 seed=25 show plot=pic-random-spectrum-3.pdf nev=4 ev_idx=3



./zorbit.py random_nostabs n=20 m=19 weight=3 hz=1 hx=1 slepc run nev=5 eps_tol=0.0001 seed=25

.........1...1...1.. ....1.1.......1.....
1................1.1 ..1..............1.1
1........11......... ......1..........1.1
.....1.........1..1. ...1.1......1.......
1....1.........1.... .....1....1.1.......
.......1.....1.....1 .1.......11.........
.......1.1.......1.. ....1..........1.1..
...1.....1.....1.... ..........1....1..1.
.....1.......1....1. ......1.....1..1....
.....1......11...... ......1.......11....
..1.............1.1. .11.1...............
........1.1.1....... ........1.....1....1
....1.........11.... .......1.....1..1...
.11.......1......... .1.1....1...........
..1..........1...1.. .......1.......1...1
1....1..1........... ...........1.....1.1
......11...1........ 1...1.........1.....
.......1.11......... ......1.....1....1..
............1.1....1 ..........11......1.


miltonian Eigenproblem (matrix-free version), n=262144
EPSSetInitialSpace
EPSSolve
olution method: krylovschur

 Number of requested eigenvalues: 5
 Linear eigensolve converged (6 eigenpairs) due to CONVERGED_TOL; iterations 77
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       21.166402            4.03109e-05
/\       20.878253            3.90712e-05
/\       20.337777            5.83742e-05 <------ wierdo !
/\       19.920809             9.4361e-05
/\       19.845702            9.74971e-05
/\       19.799308            5.30467e-05
 ---------------------- --------------------

n = 20
Lz: 0
Hx: 1 Hz: 1
Gx: 19 Gz: 19
Rx: 18 Rz: 18
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 5 -eps_ncv 10 -eps_largest_real -eps_view_vectors binary:evec.bin  -eps_tol 0.0001 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

./zorbit.py random_nostabs n=20 m=19 weight=3 hz=1 hx=1 slepc run nev=1 eps_tol=0.0001 seed=25 excite=0

m m m m m m m m m m m m m m m m m m m m m m m Hamiltonian Eigenproblem (matrix-free version), n=262144
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 1
 Linear eigensolve converged (1 eigenpair) due to CONVERGED_TOL; iterations 15
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       20.722761            8.82192e-05
 ---------------------- --------------------

n = 20
Lz: 0
Hx: 1 Hz: 1
Gx: 19 Gz: 19
Rx: 18 Rz: 18
slepc: name=ex3.tmp.c
excite: 0
./ex3.tmp -eps_nev 1 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin  -eps_tol 0.0001





9/1/17
======





30/12/16
========

Random gauge codes without stabilizers appear to be gapless.

./zorbit.py  random n=12 seed=1 slepc run nev=2
(1, 12) (11, 12)
n = 12
Lz: 1
Hx: 0 Hz: 0
Gx: 11 Gz: 11
Rx: 11 Rz: 11
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=2048
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 67
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       12.799345            9.37364e-09
/\       12.368187            8.56468e-09
 ---------------------- --------------------


./zorbit.py  random n=12 seed=5 slepc run nev=2
(1, 12) (11, 12)
n = 12
Lz: 1
Hx: 0 Hz: 0
Gx: 11 Gz: 11
Rx: 11 Rz: 11
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=2048
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 79
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       12.429275             8.3897e-09
/\       12.098874            9.30159e-09
 ---------------------- --------------------

./zorbit.py  random n=12  slepc run nev=2 seed=7
(1, 12) (11, 12)
n = 12
Lz: 1
Hx: 0 Hz: 0
Gx: 11 Gz: 11
Rx: 11 Rz: 11
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=2048
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 69
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       12.548900            6.66174e-09
/\       12.144080            8.75712e-09
 ---------------------- --------------------


./zorbit.py  random n=16  slepc run nev=2 seed=10
(1, 16) (15, 16)
n = 16
Lz: 1
Hx: 0 Hz: 0
Gx: 15 Gz: 15
Rx: 15 Rz: 15
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=32768
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 56
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       16.232598            9.93397e-09
/\       16.100906            7.48044e-09
 ---------------------- --------------------


./zorbit.py  random n=16  slepc run nev=2 seed=13
(2, 16) (14, 16)
n = 16
Lz: 2
Hx: 0 Hz: 0
Gx: 14 Gz: 14
Rx: 14 Rz: 14
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=16384
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 52
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       15.193336            7.76112e-09
/\       15.029775            9.00137e-09
 ---------------------- --------------------

./zorbit.py  random n=20  slepc run nev=2 seed=1
(1, 20) (19, 20)
n = 20
Lz: 1
Hx: 0 Hz: 0
Gx: 19 Gz: 19
Rx: 19 Rz: 19
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=524288
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 57
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       20.136888            9.35054e-09
/\       20.081742            8.00547e-09
 ---------------------- --------------------


./zorbit.py  random n=20  slepc run nev=2 seed=2
(1, 20) (19, 20)
n = 20
Lz: 1
Hx: 0 Hz: 0
Gx: 19 Gz: 19
Rx: 19 Rz: 19
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=524288
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 58
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       20.286634            9.93301e-09
/\       20.217833            7.86596e-09
 ---------------------- --------------------



14/12/16
========

TODO:
    2D ising model?
    Open boundary conditions?


14/12/16
========

The symmetries of the xy model do not come from the Weyl group.
Similarly ising model.

time ./symplectic.py xy n=8 roots
11...... 11......
.11..... .11.....
..11.... ..11....
...11... ...11...
....11.. ....11..
.....11. .....11.
......11 ......11
1......1 1......1
Gx: 8 Gz: 8 Rx/z: 6
11111111 11111111
Hx: 1 Hz: 1
ideal: 28 cartan: 4
D_4 = so_8
build_roots 4 24
8 (2, 2, 0, 0)
8 (2, -2, 0, 0)
8 (-2, 2, 0, 0)
8 (-2, -2, 0, 0)
8 (0, 2, 2, 0)
8 (0, 2, -2, 0)
8 (0, -2, 2, 0)
8 (0, -2, -2, 0)
8 (2, 0, 0, 2)
8 (2, 0, 0, -2)
8 (-2, 0, 0, 2)
8 (-2, 0, 0, -2)
8 (2, 0, 2, 0)
8 (2, 0, -2, 0)
8 (-2, 0, 2, 0)
8 (-2, 0, -2, 0)
8 (0, 2, 0, 2)
8 (0, 2, 0, -2)
8 (0, -2, 0, 2)
8 (0, -2, 0, -2)
8 (0, 0, 2, 2)
8 (0, 0, 2, -2)
8 (0, 0, -2, 2)
8 (0, 0, -2, -2)
eigs: 24
roots: 24
[1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
perms: 24
Weyl group: 192
Hamiltonian stabilizer subgroup: 1
ideal: 28 cartan: 4
D_4 = so_8
build_roots 4 24
8 (2, 2, 0, 0)
8 (2, -2, 0, 0)
8 (-2, 2, 0, 0)
8 (-2, -2, 0, 0)
8 (0, 2, 2, 0)
8 (0, 2, -2, 0)
8 (0, -2, 2, 0)
8 (0, -2, -2, 0)
8 (2, 0, 0, 2)
8 (2, 0, 0, -2)
8 (-2, 0, 0, 2)
8 (-2, 0, 0, -2)
8 (2, 0, 2, 0)
8 (2, 0, -2, 0)
8 (-2, 0, 2, 0)
8 (-2, 0, -2, 0)
8 (0, 2, 0, 2)
8 (0, 2, 0, -2)
8 (0, -2, 0, 2)
8 (0, -2, 0, -2)
8 (0, 0, 2, 2)
8 (0, 0, 2, -2)
8 (0, 0, -2, 2)
8 (0, 0, -2, -2)
eigs: 24
roots: 24
[0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1]
perms: 24
Weyl group: 192
Hamiltonian stabilizer subgroup: 1




10/12/16
========

butters.physics.usyd.edu.au:spectrum2015$ ./zorbit.py compass3 symmetry > zorbit.1.out &


$ ./symplectic.py test_model random ideals forever n=6 > search.6.txt
grep [ABCDEFG]_ search.6.txt |sort|uniq
A_15 = sl_16
A_1 = sl_2
A_31 = sl_32
A_3 = sl_4
A_7 = sl_8
B_16 = so_33, *OR*
B_2 = so_5, *OR*
B_32 = so_65, *OR*
B_3 = so_7, *OR*
B_4 = so_9, *OR*
B_5 = so_11, *OR*
B_8 = so_17, *OR*
C_16 = sp_32
C_2 = sp_4
C_32 = sp_64
C_3 = sp_6
C_4 = sp_8
C_5 = sp_10
C_8 = sp_16
D_16 = so_32
D_32 = so_64
D_4 = so_8
D_5 = so_10
D_6 = so_12
D_8 = so_16


9/12/16
=======

kyle.physics.usyd.edu.au:spectrum2015$ ./zorbit.py dense orbigraph compass3
(1, 27) (54, 27)
n = 27
Lz: 1
Hx: 2 Hz: 2
Gx: 54 Gz: 54
Rx: 22 Rz: 22
Hx|Tx:
111111111111111111......... .1.........................
.........111111111111111111 11.........................
Hx:
0 111111111111111111......... 18
1 .........111111111111111111 18
GzTx
0 .111..........1....................................... 4
1 1.11.1......1.1....................................... 6
Tx: 2
excite: (0, 0)
do_orbigraph pnauty.init_graph 4194304 226492416 54
pnauty.search pnauty.search: Automorphism group size = 216
orbits: 20609
eigval, degeneracy:
    (60.2954709426+0j) 1
    (58.3824449207+0j) 1
    (52.7250084533+0j) 1
    ...
excite: (0, 1)
do_orbigraph pnauty.init_graph 4194304 226492416 54
pnauty.search pnauty.search: Automorphism group size = 72
orbits: 60283
eigval, degeneracy:
    (59.7576766425+0j) 1
    (56.3030110616+0j) 1
    (54.2588413501+0j) 1
    ...
excite: (1, 1)
do_orbigraph pnauty.init_graph 4194304 226492416 54
pnauty.search pnauty.search: Automorphism group size = 72
orbits: 60283
eigval, degeneracy:
    (59.7576766425+0j) 1
    (56.3030110616+0j) 1
    (54.2588413501+0j) 1
    ...


8/12/16
=======

simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py compass3 slepc run nev=2
(1, 27) (54, 27)
n = 27
Lz: 1
Hx: 2 Hz: 2
Gx: 54 Gz: 54
Rx: 22 Rz: 22
slepc: name=ex3.tmp.c
./ex3.tmp -eps_nev 2 -eps_ncv 4 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=4194304
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 2
 Linear eigensolve converged (2 eigenpairs) due to CONVERGED_TOL; iterations 37
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       60.295471            9.57965e-09
/\       58.382445            9.15877e-09
 ---------------------- --------------------


simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py compass3 slepc run excite=0
(1, 27) (54, 27)
n = 27
Lz: 1
Hx: 2 Hz: 2
Gx: 54 Gz: 54
Rx: 22 Rz: 22
excite: 0
./ex3.tmp -eps_nev 1 -eps_ncv 3 -eps_largest_real -eps_view_vectors binary:evec.bin 
Hamiltonian Eigenproblem (matrix-free version), n=4194304
EPSSetInitialSpace
EPSSolve
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ Solution method: krylovschur

 Number of requested eigenvalues: 1
 Linear eigensolve converged (1 eigenpair) due to CONVERGED_TOL; iterations 53
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
/\       59.757677            7.43549e-09
 ---------------------- --------------------




4/12/16
=======

Example of C_n
~~~~~~~~~~~~~~

python ./symplectic.py test_model ideals random n=6 seed=11 roots
...1.. 1..1..
..111. ....11
11.... 1.....
..11.. 1..1.1
.11..1 11..11
Gx: 5
r = 4
ideal: 136 cartan: 8
B_8 = so_17, *OR*
C_8 = sp_16
build_roots 8 128
...
eigs: 241
roots: 128
short roots: 112
long  roots: 16


Example of B_n
~~~~~~~~~~~~~~

$ python ./symplectic.py test_model ideals random n=5 seed=1 roots
.1... 1...1
...1. ..1..
11..1 ..1.1
      11.1.
      .1...
Gx: 3
r = 3
ideal: 21 cartan: 3
B_3 = so_7, *OR*
C_3 = sp_6
build_roots 3 18
8 (2, 2, 0) 8 (2, -2, 0) 8 (-2, 2, 0) 8 (-2, -2, 0) 4 (0, 2, 0) 4 (0, -2, 0)
8 (2, 0, 2) 8 (2, 0, -2) 8 (-2, 0, 2) 8 (-2, 0, -2) 4 (2, 0, 0) 4 (-2, 0, 0)
8 (0, 2, 2) 8 (0, 2, -2) 8 (0, -2, 2) 8 (0, -2, -2) 4 (0, 0, 2) 4 (0, 0, -2)
eigs: 30
roots: 18
short roots: 6
long  roots: 12
cartan: 3


2/12/16
=======

Fulton&Harris bookmarks


Weyl group generated by involutions p201

Involution around alpha:

p202:
Every element of the Weyl group is induced by an automorphism
of the Lie algebra g carrying h to itself.

Killing form: the unique inner product (up to scalar) preserved
by Weyl group.

sl_4, sl_n : p211

Weyl group of sp: p271

From wikipedia:
The Weyl group of the Lie algebra {\displaystyle {\mathfrak {sl}}_{n}}￼
is the symmetric group on n elements, Sn. The action
can be realized as follows. If {\displaystyle {\mathfrak {h}}}￼ is
the Cartan subalgebra of all diagonal matrices with trace zero,
then Sn acts on {\displaystyle {\mathfrak {h}}}￼ via conjugation by
permutation matrices. This action induces an action on the dual
space {\displaystyle {\mathfrak {h}}^{\ast }}￼, which is the required Weyl
group action.

Humphreys p9: an automorphism exp(ad x) with ad x nilpotent


30/11/16
========

Projective plane defines a gauge code:
gauge operators are lines
stabs are pairs of lines.
  Throw out a gauge operator to get a logop?

Projective plane of order q :
    q+1 points on each line,
    q+1 lines intersect each point
    |lines| = |points| = q^2 + q + 1

q is conjectured to always be a prime power.





13/11/16
========

n=4,  
type A_3

ACCEPT          | H_0   H_1   H_2  ...
----------------|------------------
I               |   .     .     x
I,P             | 105     .     x
I,  L           | 105     .     x
I,    S         | 105     .     x
I,P,L           |  15   120     .   (*)
I,P,L,S         |   1   316     .   (*)


13/11/16
========

Notes from "Diagram Geometry" book.

A_n : Projective geometry
B_n : Polar geometry
D_n : Oriflamme geometry


4.2 Thin geometries of Coxeter type
-----------------------------------

M is the Coxeter matrix that defines the relations
of the Coxeter group W with generators S.

4.2.7: A chamber system C is of type M when for each
distinct i,j in S, each i,j-cell of C is a generalized m_{i,j}-gon.

The universal thin such chamber system is denoted C(M), all
other thin chamber systems of type M are quotients of this.
For example, C(A_n) is the chamber system of the n-simplex.

Let S be the set of types of the chamber system.
A _gallery_ is a path in the chamber system.
A _minimal_ gallery is a geodesic such path.

Important: because these geometries are thin,
galleries that start at a chamber $c$ are specified by 
elements of the Coxeter group.

6. Projective and Affine Spaces
-------------------------------

Considering a projective geometry:

Theorem 6.5.5:
i) any two chambers are contained in an apartment.
ii) ..?
iii) if e is a chamber on a minimal gallery from c to d, then
e is contained in every appartment that contains c and d.

A projective plane has one appartment for every triangle.


11. Buildings
-------------

S* is the monoid freely generated by S.
An element of S* is minimal when it "looks the same" in W.

A simple gallery has no repeated chambers.
The _type_ of a gallery is an element of S*.
A gallery has minimal type when the type "looks the same" in W.

A chamber system is a _building_ when every simple closed gallery
of minimal type is trivial.

Corollary 11.1.14: given two chambers c and d, the set of minimal
galleries from c to d is in bijective correspondence (via the type)
to the set of minimal expressions in S* of a unique element w of W called
the Weyl distance between c and d.

An appartment of C is a chamber subsystem isomorphic to C(M).

W itself is a building, with weyl distance delta(v,w):=v^{-1}w.



12/11/16
========

https://golem.ph.utexas.edu/category/2016/11/linear_algebraic_groups_part_7.html

I'm very much appreciating the notes by John Simanyi!

One thing that struck me is how the picture for
a flag in the case of sets looks much like a
pair-of-pants decomposition for a surface (with holes).
These things are
probably all connected somehow, but it's very nice to see
a *picture* that suggests such a connection. Is it reasonable to
draw an analogy between a flag and a pair-of-pants decomposition?
I wonder if there is something more concrete to say
about this. 
A pair-of-pants decomposition gets braided around by the
mapping class group of the surface, which is an infinite
group. But there is also a subgroup that fixes a
particular pair-of-pants decomposition.

parabolic subgroups of the braid group:
https://arxiv.org/abs/1402.5541

1/11/16
=======

3D gauge color code
qubits\edges as a rank 4 thin chamber system
qubits = maximal flags (chambers)
edges : 4 types (colors)

dynkin diagram is affine (tilde) A_3:

R   B
o---o
|   |
o---o
Y   G

gauge operators : rank two residues 
    there are six of these corresponding to
    the six choices from the four types

A geometry corresponding to affine A_3 is
the tetrahedral-octahedral honeycomb:
https://en.wikipedia.org/wiki/Tetrahedral-octahedral_honeycomb




27/10/16
========

n=3 (Fano plane) / A_2

ACCEPT          | H_0   H_1   H_2  ...
----------------|------------------
I               |   .     .     .   
I,L             |  14     .     .   
I,L,P           |   1     8     .   (*)
I,L,P,LP        |   1     8     .   (*)
I,L,P,LP,PL     |   1     8     .   (*)
I,L,P,LP,PL,LPL |   1     .     x
  L             |   .    14     . # <--- these all have trivial 0-chains
  L,P           |   .    28     . # <--- 
  L,P,LP        |   .    28     . # ...
  L,P,LP,PL     |   .    28     .
  L,P,LP,PL,LPL |   .    20     x
  L,  LP        |   .    14     .
  L,  LP,PL     |   .    14     .
  L,  LP,PL,LPL |   .     6     .
  L,  LP,   LPL |   .     .     x
      LP        |   .     .     .
      LP,PL     |   .     .     .
      LP,PL,LPL |   .     .     x
      LP,   LPL |   .     .     x
            LPL |   .     .     x

n=4 / A_2

ACCEPT          | H_0   H_1   H_2
----------------|------------------
I               |   .     .     x
I,L             |  15     .     x
I,L,P           |   1    56     .   (*)
  L,P           |   .   160     .


21/10/16
========

homology concentrated in lowest dimension n=1.
looks like all other homology is zero.
bdy maps non-trivial, ie. exact sequence.

Z_2 homology, but Z homology looks the same.

$ ./geometry.py projective magnitude N=4 Z2 accept=L,
flags: 21
relations: 6
magnitude_homology:
ACCEPT: 'L,'
(((2, 2), ((0, 0), 0), ((0, 1), 1), ((1, 0), 1), ((1, 1), 1)),)
|0-chains|=0
|1-chains|=42
|2-chains|=168
|3-chains|=546
bdy: chains[1] -> chains[0] nnz: 0 range: set([])
bdy: chains[2] -> chains[1] nnz: 294 range: set([0, 1, -1])
bdy: chains[3] -> chains[2] nnz: 1512 range: set([0, 1, -1])
find_homology
168 --f--> 42 --g--> 0
rank(f)=28, rank(g)=0
ker(f): 140
find_homology
546 --f--> 168 --g--> 42
rank(f)=140, rank(g)=28
ker(g): 140
ker(f): 406



28/9/16,  30/11/16
==================


./symplectic.py test_model xy ideals n=10
Gx: 10
r = 8
ideal: 45
ideal: 45
cartan: 10
So each ideal has rank n=5, dim = 2n^2 - n, lie algebra is so_10

./symplectic.py test_model compass ideals closure l=4
Gx: 16
r = 9
algebra dimension: 130816 == 256 * 511
ideal: 130816 ---> one ideal means it is simple 
130816 == 2^17 - 2^8
cartan: 256 ---> rank 256
dim = 256^2 + 256 * 255 = n^2 + n*(n-1) = 2*n^2 - n
So this must be the lie algebra so_512

./symplectic.py test_model ideals compass l=3
Gx: 9
r = 4
ideal: 255 == n**2 + 2*n, sl_16
cartan: 15

./symplectic.py test_model ising ideals n=8
Gx: 8
r = 7
ideal: 120
cartan: 8
120 = 2*n^2 - n
lie algebra is so_16

./symplectic.py test_model gcolor ideals 
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
Gx: 18
r = 6
ideal: 3 ideal: 3 ideal: 3 ideal: 3 ideal: 3 ideal: 3
cartan: 6
rank n=1
six copies of sl_2

./symplectic.py test_model gcolor2 ideals 
Gx: 48
r = 18
ideal: 63 ideal: 63 ideal: 63 ideal: 63 ideal: 63 ideal: 63
cartan: 42
rank n=7
six copies of sl_8

./symplectic.py test_model gcolor size=2 ideals 
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
Gx: 80
r = 32
ideal: 1023 ideal: 1023 ideal: 1023 ideal: 1023 == 32^2 - 1, rank n=31
ideal: 4095 ideal: 4095 == 64^2 - 1, rank n=63
cartan: 250 == 4*31 + 2*63
== 4*sl_32 + 2*sl_64


./symplectic.py test_model projective ideals n=4 # no logops
Gx: 35
r = 7
ideal: 8256 == 2*n^2 + n
cartan: 64
either B_n:so_{2n+1} or C_n:sp_2n 
Found one long root, length^2=256:
256 (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)
the rest have length^2 128, eg.:
128 (2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
Therefore??? lie algebra is C_n:sp_{2n}

Another one:
./symplectic.py test_model ideals random n=8 seed=7 roots
Gx,Gz:
.1.11... ..111.1.
...1...1 ..1.....
..1..1.. ...11..1
1..1.... 1.11.1..
...11... 11....1.
.....1.1 .111....
.1..1... ..11....
Gx: 7
r = 7
ideal: 8256 cartan: 64
C_64 = sp_128

./symplectic.py test_model ideals random n=6 seed=0 roots
.1.... ..1...
.11.1. ....1.
.1...1 1.1.1.
1111.1       
...1..       
Gx: 5
r = 2
ideal: 10 cartan: 2
B_2 = so_5, *OR*
C_2 = sp_4
build_roots 2 8
8 (2, 2)
8 (2, -2)
8 (-2, 2)
8 (-2, -2)
4 (0, 2)
4 (0, -2)
4 (2, 0)
4 (-2, 0)
eigs: 13
roots: 8
cartan: 2
This is C_2 == B_2



So what?

Suzuki-Trotter is all about the brackets... ?


28/9/16
=======


Verified on stan that single stabilizer frustration holds second eigval:
...
 64942 ((1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0), 87.0323019209)
 64958 ((1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0), 87.1659261761)

 64943 ((1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1), 85.7692843493)
 64959 ((1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1), 85.9029086044)


./spectrum.py main compass N=30 l=4


20/9/16
=======

time ./gcolor.py test size=2 enum
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) eval: 104.076025916
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) eval: 101.602339661
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0) eval: 101.602339661
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1) eval: 100.167833482
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0) eval: 102.382483285
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1) eval: 100.444796375
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0) eval: 100.70415144
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1) eval: 99.1679803186
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0) eval: 102.382483285
(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1) eval: 100.70415144
...

Fails to be monotonic:

./parselog.py gcolor2.stabilizer.log 
((0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1), 94.0096555855)
((0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1), 94.0499279492)
Traceback (most recent call last):
  File "./parselog.py", line 40, in <module>
    assert 0, (i, j)
AssertionError: (41, 57)

Even including stabilizer weight: fails to be monotonic.


17/9/16
=======


Model(Lx/z: 1, Gx: 48, Gz: 48, Hx: 10, Hz: 10, Rx/z: 18)
Model(Lx/z: 36, Gx: 9, Gz: 7, Hx: 0, Hz: 0, Rx/z: 3)
[0, 1, 3, 7, 2, 4, 6, 5]
[[ 7   3   2       1   2   1    ] 
 [ 3   1   1   2   2           1] 
 [ 2   1   1   1   3           2] 
 [     2   1   1       3   2   1] 
 [ 1   2   3      -1   1   2    ] 
 [ 2           3   1  -1   1   2] 
 [ 1           2   2   1  -1   3] 
 [     1   2   1       2   3  -7]]

exactly solvable ?

./gauge.py gcolor size=1.5 ideal R=3 filename=pic-gcolor-ideal.pdf

16/9/16
=======

Here we decompose reduced gauge group, we get the same
as before but without the stabilizers on the sub-codes.

time ./gcolor.py test size=2 
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
Model(Gx: 80, Gz: 80, Lx: 1, Hx: 16, Hz: 16, Rx: 32)

Model(Gx: 14, Gz: 14, Lx: 59, Hx: 0, Hz: 0, Rx: 6)
(64, 64)
vals: [18.052875114275892, 12.990945708566935, 10.944551482612107] gap: 5.06192940571

Model(Gx: 14, Gz: 14, Lx: 59, Hx: 0, Hz: 0, Rx: 6) # <---- no stabilizers
(64, 64)
vals: [18.052875114275889, 12.990945708566926, 10.944551482612113] gap: 5.06192940571

Model(Gx: 13, Gz: 13, Lx: 60, Hx: 0, Hz: 0, Rx: 5)
(32, 32)
vals: [16.992568921823885, 11.373828578997692, 9.0089892016058837] gap: 5.61874034283

Model(Gx: 13, Gz: 13, Lx: 60, Hx: 0, Hz: 0, Rx: 5)
(32, 32)
vals: [16.992568921823885, 11.373828578997692, 9.0089892016058819] gap: 5.61874034283

Model(Gx: 13, Gz: 13, Lx: 60, Hx: 0, Hz: 0, Rx: 5)
(32, 32)
vals: [16.992568921823892, 11.373828578997696, 9.0089892016058855] gap: 5.61874034283

Model(Gx: 13, Gz: 13, Lx: 60, Hx: 0, Hz: 0, Rx: 5)
(32, 32)
vals: [16.992568921823885, 11.373828578997697, 9.0089892016058855] gap: 5.61874034283
eval: 104.076025916
gap: 5.06192940571
eval_2: 99.0140965101



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

here we look at two different reps of sl_2:

>>> import numpy
>>> X=numpy.array([[0.,2,0],[1,0,1],[0,2,0]])
>>> Z=numpy.array([[2.,0,0],[0,0,0],[0,0,-2]])
>>> H=X+Z
>>> print H
[[ 2.  2.  0.]
 [ 1.  0.  1.]
 [ 0.  2. -2.]]
>>> vals,vecs = numpy.lin
numpy.linalg     numpy.linspace(  
>>> vals,vecs = numpy.linalg.eig(H)
>>> vals
array([  2.82842712e+00,   1.22334851e-16,  -2.82842712e+00])
>>> list(vals)
[2.8284271247461903, 1.2233485098957046e-16, -2.8284271247461898]

>>> X1=numpy.array([[0.,1],[1,0]])
>>> Z1=numpy.array([[1.,0],[0.,-1]])
>>> H1=X1+Z1
>>> H1
array([[ 1.,  1.],
       [ 1., -1.]])
>>> vals,vecs = numpy.linalg.eig(H1)
>>> list(vals)
[1.4142135623730951, -1.4142135623730951]
>>> 


15/9/16
=======

Gauge operators of one type (a bi-color) generate
half of the stabilizers: those corresponding to the two colors 
of the gauge op.


$ time ./gcolor.py test size=2
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
Model(Gx: 80, Gz: 80, Lx: 1, Hx: 16, Hz: 16, Rx: 32)

Model(Gx: 14, Gz: 14, Lx: 43, Hx: 8, Hz: 8, Rx: 6)
[18.052875, 12.990946] gap: 5.061929

Model(Gx: 13, Gz: 13, Lx: 44, Hx: 8, Hz: 8, Rx: 5)
[16.992569, 11.373829] gap: 5.61874

Model(Gx: 13, Gz: 13, Lx: 44, Hx: 8, Hz: 8, Rx: 5)
[16.992569, 11.373829] gap: 5.61874
eval: 104.076026
gap: 5.061929
eval_2: 99.014097


$ time ./gcolor.py test size=3
guage ops: 214
qubits: 175
stabs: 40
Lattice(3:175, 2:348, 1:214, 0:40)
Model(Gx: 214, Gz: 214, Lx: 1, Hx: 40, Hz: 40, Rx: 94)

Model(Gx: 39, Gz: 39, Lx: 116, Hx: 20, Hz: 20, Rx: 19)
[48.219094, 45.272162] gap: 2.946932

Model(Gx: 34, Gz: 34, Lx: 121, Hx: 20, Hz: 20, Rx: 14)
[42.689847, 38.442742] gap: 4.247105

Model(Gx: 34, Gz: 34, Lx: 121, Hx: 20, Hz: 20, Rx: 14)
[42.689847, 38.442742] gap: 4.247105
eval: 267.197576
gap: 2.946932
eval_2: 264.250644

real8m50m38.452s



12/9/16
=======

time ./symplectic.py test_model gcolor size=1.5 render_ideals


11/9/16
=======

" Any irreducible representation of a direct sum of Lie algebras can
be considered as the tensor product of irreducible representations of the
individual summands . "

Irreducible because syndromes non-degenerate on H_t.

9/9/16
======

time ./gauge.py size=1.5 name=pic-gcolor-15.pdf
time ./gauge.py size=1 transparency=0.4 name=pic-gcolor-1.pdf
time ./gauge.py size=2 transparency=0.4 name=pic-gcolor-2.pdf


8/9/16
======

time ./symplectic.py test_model compass ideals verbose stop1 l=4
r = 9

remain: 16
algebra dimension: 130816 == 256 * 511
cartan dimension: 256



6/9/16
======

** Direct sums of lie algebras corresponds to tensor products of the representation. **

** Non-degenerate killing form == semisimple **

time ./symplectic.py test_model gcolor stop1 size=2 verbose
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
r = 32
algebra dimension: 12282
cartan dimension: 250
ideals: 6 [4095, 4095, 1023, 1023, 1023, 1023]



stan.physics.usyd.edu.au:spectrum2015$ i686-linux-gnu-gcc -O1 -pthread -fno-strict-aliasing -g -fwrapv -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -I/suphys/sburton/include/python2.7 -c cbracket.c -o cbracket.o
stan.physics.usyd.edu.au:spectrum2015$ i686-linux-gnu-gcc -pthread -shared -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -g -fwrapv -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security cbracket.o -o cbracket.so


example of |non-trivial orbits| != |cartan|

./symplectic.py test_model xy n=12
r = 10
size: 132
cartan: 12
orbits: 42
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1
trivial: 12 non-trivial 30


time ./symplectic.py test_model gcolor2
r = 18
algebra dimension: 378
cartan dimension: 42
subalgebras: 6 [63, 63, 63, 63, 63, 63]



5/9/16
======

looks like |non-trivial orbits| = |cartan|


./symplectic.py test_model gcolor2
r = 18
orbits: 84
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
trivial: 42 non-trivial 42



4/9/16
======

./symplectic.py test_model pauli
r = 2
size: 15
cartan: 3
0->6 1->8 6->0 7->14 8->1 9->13 13->9 14->7
0->7 2->10 6->14 7->0 10->2 11->12 12->11 14->6
1->9 2->11 8->13 9->1 10->12 11->2 12->10 13->8
orbits: 6
4 4 4 1 1 1
3 non-trivial orbits
* 4 irreps
= 12 off-diagonal E_ij entries


./symplectic.py test_model compass |tail -2
orbits: 30
16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
15 non-trivial orbits
* 16 irreps = 15*16 = number off-diagonal entries


3/9/16
======

# This is sl_4
time ./symplectic.py test_model pauli
r = 2
size: 15
cartan: 3

0->6 1->8 6->0 7->14 8->1 9->13 13->9 14->7
0->7 2->10 6->14 7->0 10->2 11->12 12->11 14->6
1->9 2->11 8->13 9->1 10->12 11->2 12->10 13->8

In the computational basis, each of the cartan operators 
act as swaps (square to 1) and since this group is
abelian it must be isomorphic to a power of Z_2.

So we have a permutation rep of this group, and the
invarient subspaces will be spanned by the roots of the
lie algebra. (Not sure about this: there are some
factors of 2 left out.)


2/9/16
======

Take closure of the operators in H_{0,0} under bracket.
As a group these operators form a group with order 2**(2r+1),
or 2**(2r) without the phase subgroup.

./symplectic.py test_model gcolor2
r = 18
378 # <--- size
    # == 2*3*3*3*7
cartan: 42

./symplectic.py test_model gcolor
r = 6
18 # <--- size, this is sl_2 tensored 6 times.
cartan: 6

./symplectic.py test_model compass
r = 4
255  # <--- size
     # this is all of sl_16
cartan: 15





28/8/16
=======

time ./bracket.py xy n=5
no pyx module found
OK
.11..
..111
...11
....1
new: 138 new: 26 pairs: 312
new: 148 new: 56 pairs: 2128
new: 886 new: 262 pairs: 24628
new: 7895 new: 793 pairs: 282308
new: 49906 new: 975 pairs: 1120275
new: 86363 new: 0 pairs: 0
ops: 2124

real8m5.709s
user8m4.943s
system0m0.549s


26/8/16
=======


./parsenauty.py gap

gcolor2 orbit group is S_3*S_3

cat pnauty.gap  | gap.sh 
gap> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > <permutation group with 4 generators>
gap> > Group([ (2,3), (1,2,3), (5,6), (4,5) ])



17/8/16
=======

./parsenauty.py pnauty.out.gcolor2 262144
orbits: 14400
counts: {1: 64, 3: 896, 36: 3136, 6: 896, 9: 3136, 18: 6272}
fixed: 64
fixed: [0, 77, 142, 195, 316, 369, 434, 511, 12800, 12877, 12942, 12995, 13116, 13169, 13234, 13311, 83968, 84045, 84110, 84163, 84284, 84337, 84402, 84479, 96768, 96845, 96910, 96963, 97084, 97137, 97202, 97279, 171520, 171597, 171662, 171715, 171836, 171889, 171954, 172031, 175104, 175181, 175246, 175299, 175420, 175473, 175538, 175615, 251392, 251469, 251534, 251587, 251708, 251761, 251826, 251903, 254976, 255053, 255118, 255171, 255292, 255345, 255410, 255487]
000000000000000000
000000000001001101
000000000010001110
000000000011000011
000000000100111100
000000000101110001
000000000110110010
000000000111111111
000011001000000000
000011001001001101
000011001010001110
000011001011000011
000011001100111100
000011001101110001
000011001110110010
000011001111111111
010100100000000000
010100100001001101
010100100010001110
010100100011000011
010100100100111100
010100100101110001
010100100110110010
010100100111111111
010111101000000000
010111101001001101
010111101010001110
010111101011000011
010111101100111100
010111101101110001
010111101110110010
010111101111111111
101001111000000000
101001111001001101
101001111010001110
101001111011000011
101001111100111100
101001111101110001
101001111110110010
101001111111111111
101010110000000000
101010110001001101
101010110010001110
101010110011000011
101010110100111100
101010110101110001
101010110110110010
101010110111111111
111101011000000000
111101011001001101
111101011010001110
111101011011000011
111101011100111100
111101011101110001
111101011110110010
111101011111111111
111110010000000000
111110010001001101
111110010010001110
111110010011000011
111110010100111100
111110010101110001
111110010110110010
111110010111111111



8/8/16
======



GPR = dot2(Gx, Pxt, Rz.transpose())
for P in search_isos(Gz, Rx):

./linear.py compass l=4
Q = find_rowperm(GPR, dot2(GPR, P))   <-- filters exactly the P's that work
count: 128
total: 1152

./linear.py gcolor
Q = find_rowperm(GPR, dot2(GPR, P))  <-- too restrictive (not necessary)
count: 12     <-- why is this less than |S_4|=24 the code autos ?
total: 720
orbits: 24

./linear.py xy n=10
count: 4
total: 200
orbits: 100

./linear.py xy n=10 isos
Q = find_rowperm(GPR, dot2(GPR, P))  <-- not sufficient ! (some of these P's do not even preserve Hamiltonian)
count: 4
total: 28800



5/8/16
======

plenty of symmetry even in random codes:
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=8 |egrep "isomorphism|span"
span: 128
isomorphisms: 8
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=8 |egrep "isomorphism|span"
span: 64
isomorphisms: 1
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=8 |egrep "isomorphism|span"
span: 256
isomorphisms: 96
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=8 |egrep "isomorphism|span"
span: 32
isomorphisms: 2
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=10 |egrep "isomorphism|span"
span: 128
isomorphisms: 2
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=10 |egrep "isomorphism|span"
span: 128
isomorphisms: 1
simon@bucket ~/home/github/spectrum2015 $ ./zorbit.py random solve orbigraph n=10 |egrep "isomorphism|span"
span: 512
isomorphisms: 2






======

stan.physics.usyd.edu.au:spectrum2015$ ./zorbit.py gcolor solve orbigraph symplectic > orbigraph.gcolor.out &


./ex3 -load /import/stan1/sburton/evec.gs.2.bin -eps_largest_real -eps_nev 2 -eps_ncv 3 -eps_type arnoldi -info -eps_monitor -eps_tol 1e-4 > ex3.gs.4.out &


29/7/16
=======

Show size of cheeger cut and weight of groundstate along the cut:

./cheeger.py gcolor
cut: 3072 18432 6.0
weight: 2.12132034356


./cheeger.py compass l=3
cut: 192 576=64*9=2**6
weight: 1.03646679748
576=64*9
192=576/3

./cheeger.py compass l=4
cut: 24576
cut: 16896 65536
weight: 1.12626948096


65536=2**16=4096*l*l=2**12*l*l
16896=65536/4 + 512 # zeroes not handled well...


./cheeger.py compass l=5
cut: 4688000 26214400
weight: 1.05439001617


26214400=2**20 * 25
2**(5*4)*25 / 4688000. = 5.591808873720137



28/7/16
=======

./zorbit.py compass dense_full orbistab excite=0,0


./zorbit.py compass l=6 slepc name=ex3.tmp.c
./ex3.tmp  -eps_nev 2  -eps_hermitian   -eps_largest_real 


27/7/16
=======

find orbigraph for \Gamma_{t_X}

./zorbit.py gcolor dense_full orbiham excite=0,0,0,0
pnauty.init_graph 1024 18432 18
pnauty.search
pnauty.search: Automorphism group size = 384
orbits: 11
eigval, degeneracy:
    (25.4558441227+0j) 1
    (16.9705627485+0j) 1
    (8.48528137424+0j) 2
    (1.62411837021e-15+0j) 3
    (-8.48528137424+0j) 2
    (-16.9705627485+0j) 1
    (-25.4558441227+0j) 1

Does not lift all degeneracy. Smaller group: 384 vs 720. More orbits: 11 vs 7.
Compare with orbigraph of H_{0,0} 

Similar story with other models.


26/7/16
=======

./zorbit.py compass l=4 show_delta excite=1,0,0

apply t_X excitation to l=4 compass model, only diagonal of H changes.
we examine this.

record diagonal start->end for each F_2[r] basis vector that changed
(half of them do)

Here we have demotions outweigh promotions:

 16  12

  8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 8   4 -> 21*4 = 84
  8  12 8  12 8  12 -> 3*12 = 36 ouch

  4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0 4   0
  4   8 4   8 4   8 4   8 4   8 4   8 4   8 4   8 4   8 4   8 4   8 4   8

 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0 -4   0
 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8 -4  -8

Here we have promotions equal demotions:
  0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4 0   4
  0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4 0  -4

Here we have promotions outweigh demotions:
 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4 -8  -4
 -8 -12 -8 -12 -8 -12

-16 -12

128 128 total: 512


26/7/16
=======

./zorbit.py  gcolor2 symmetry
. [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
. [8, 4, 7, 2, 6, 0, 1, 3, 5, 9]
. [5, 6, 3, 7, 1, 8, 4, 2, 0, 9]

isomorphisms: 3
stabilizer orbits: 0 1 2 9


./zorbit.py  gcolor size=2 symmetry
isomorphisms: 4
Z_4 symmetry.

./zorbit.py  gcolor size=2 symmetry
guage ops: 80 qubits: 65 stabs: 16

# this is the action of code automorphism on the stabilizers
>>> perms = [
... [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
... [9, 0, 10, 4, 6, 1, 8, 13, 3, 5, 15, 2, 7, 14, 12, 11]
... ,[5, 9, 15, 6, 8, 0, 3, 14, 4, 1, 11, 10, 13, 12, 7, 2]
... ,[1, 5, 11, 8, 3, 9, 4, 12, 6, 0, 2, 15, 14, 7, 13, 10]
... ]
>>> 
>>> marked = {}
>>> for i in range(16):
...   if i in marked:
...     continue
...   print i,
...   marked[i] = True
...   for perm in perms:
...     marked[perm[i]] = True
... 
stabilizer orbits: 0 2 3 7




25/7/16
=======

./zorbit.py slepc gcolor2 name=ex3.gcolor2.c  > /dev/null && ./ex3.gcolor2
./zorbit.py slepc gcolor2 name=ex3.gcolor2.c excite=0 > /dev/null && ./ex3.gcolor2
# etc.

ground   /\       64.476081            2.45132e-10

excite=0 /\       60.706477     *       3.6964e-10   
excite=1 /\       61.366348     *      2.47748e-09   
excite=2 /\       60.357053     *      8.32563e-10   
excite=3 /\       60.357053            8.32564e-10
excite=4 /\       61.366348            2.47748e-09
excite=5 /\       60.706477            3.69643e-10
excite=6 /\       61.366348            2.47748e-09
excite=7 /\       60.357053            8.32563e-10
excite=8 /\       60.706477             3.6964e-10
excite=9 /\       63.495916     *       3.5156e-09    # <--- fat stabilizer

excite=8,9 /\     60.053034            9.90256e-09


BUG found in gcolor2 construction, some gauge operators were duplicated



24/7/16
=======

./zorbit.py symmetry gcolor
isomorphisms: 24


./zorbit.py dense orbiham gcolor excite=1,0,0,0 sympy
{2*sqrt(-9*sqrt(5) + 27): 1, -2*sqrt(-27*sqrt(5) + 63): 1, -2*sqrt(-9*sqrt(5) + 27): 1, 2*sqrt(-27*sqrt(5) + 63): 1, 2*sqrt(3*sqrt(5) + 7): 1, -2*sqrt(9*sqrt(5) + 27): 1, -2*sqrt(27*sqrt(5) + 63): 1, 2*sqrt(9*sqrt(5) + 43): 1, 2*sqrt(-9*sqrt(5) + 43): 1, -2*sqrt(-3*sqrt(5) + 7): 1, -2*sqrt(-9*sqrt(5) + 43): 1, 2*sqrt(-3*sqrt(5) + 7): 1, 2*sqrt(27*sqrt(5) + 63): 1, -2*sqrt(9*sqrt(5) + 43): 1, -2*sqrt(3*sqrt(5) + 7): 1, 2*sqrt(9*sqrt(5) + 27): 1}


./zorbit.py dense orbiham compass l=5 excite=1,0,0,0


23/7/16
=======

the XY model orbigraph:

[[ 8   8   .   .   .   .   .   .   .   0],
 [ 1   4   2   4   .   .   1   .   .   0],
 [ .   4   4   .   4   .   .   .   .   0],
 [ .   2   .   .   4   .   .   2   .   0],
 [ .   .   1   4   .   2   .   .   1   0],
 [ .   .   .   .   8   .   .   .   .   0],
 [ .   4   .   .   .   .   .   4   .   0],
 [ .   .   .   4   .   .   1  -4   2   1],
 [ .   .   .   .   4   .   .   4  -4   0],
 [ .   .   .   .   .   .   .   8   .  -8]]



22/7/16
=======

./ex3 -eps_nev 1 -eps_ncv 2 -eps_type arnoldi -eps_largest_real -info -eps_monitor -load /import/stan1/sburton/evec.gs.2.bin -eps_tol 1e-3





22/7/16
=======

sophie.physics.usyd.edu.au:spectrum2015$ nice ./ex3 -eps_nev 1 -eps_type lanczos -eps_hermitian -eps_largest_magnitude  -info -eps_monitor -eps_view_vectors binary:/import/stan1/sburton/evec.gs.2.bin -eps_tol 1e-3 > ex3.gs.2.out &
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
      104.076026             2.3181e-05
 ---------------------- --------------------



stan.physics.usyd.edu.au:spectrum2015$ ./ex3 -eps_nev 1 -eps_type arnoldi -info -eps_ncv 2 -eps_monitor -eps_view_vectors binary:/export/stan1/sburton/evec.gs.3.bin -eps_tol 1e-3 > ex3.gs.3.out &
72 EPS nconv=0 first unconverged value (error) 104.075 (1.03705340e-03)




20/7/16
=======

block decomposition of l=4 compass model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./lanczos.py compass l=4 k=80
eigval, degeneracy:
    19.0129032917 2   = 2               FOUND
    18.3692998155 16  = 2 * ( 4 + 4 )   FOUND
    18.3366619361 8   = 2 * ( 2 + 2 )   FOUND
    18.0705549055 4   = 2 * ( 1 + 1 )   FOUND
    16.9521090478 32
    16.7634713604 18
iterations: 2951

./zorbit.py compass l=4 dense
Rz: 9 Hx: 3 Gx: 16 Gz: 16 Rx: 9
Hx|Tx:
11..11..11..11.. 1...............
.11..11..11..11. 1...1...........
..11..11..11..11 1...1...1.......
GzTx
0 1...........1... 2
1 ....1.......1... 2
2 ........1...1... 2
excite: (0, 0, 0) eigval: 19.0129032917
excite: (0, 0, 1) eigval:               18.3692998155
excite: (0, 1, 0) eigval:                             18.3366619361
excite: (0, 1, 1) eigval:               18.3692998155
excite: (1, 0, 0) eigval:               18.3692998155
excite: (1, 0, 1) eigval:                             18.3366619361
excite: (1, 1, 0) eigval:               18.3692998155
excite: (1, 1, 1) eigval:                                           18.0705549055


block decomposition of n=15 gauge color model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

time ./lanczos.py gcolor k=80
eigval, degeneracy:
    25.4558441227 2    = 2              FOUND
    22.2147550419 16   = 2 * ( 4 + 4 )  FOUND
    20.054028988 24    = 2 * ( 6 + 6 )  FOUND
    18.973665961 28    = 2 * ( 4 + 4 )  FOUND  + 2 * ( 3 + 3 ) ?
    17.6382638193 10

./zorbit.py gcolor dense
Rz: 6 Hx: 4 Gx: 18 Gz: 18 Rx: 6
Hx|Tx:
11111111....... .11.1..........
1111....1111... 1...1..........
11..11..11..11. 1.1............
1.1.1.1.1.1.1.1 11.............
GzTx
0 ...11111.111.11.11 12
1 1....111......1..1 6
2 .1.1..1..1.1....1. 6
3 ..1.1..1..11.1.... 6
Tx: 4
excite: (0, 0, 0, 0) eigval: 25.4558441227
excite: (0, 0, 0, 1) eigval:               22.2147550419
excite: (0, 0, 1, 0) eigval:               22.2147550419
excite: (0, 0, 1, 1) eigval:                             20.054028988
excite: (0, 1, 0, 0) eigval:               22.2147550419
excite: (0, 1, 0, 1) eigval:                             20.054028988
excite: (0, 1, 1, 0) eigval:                             20.054028988
excite: (0, 1, 1, 1) eigval:                                           18.973665961
excite: (1, 0, 0, 0) eigval:               22.2147550419
excite: (1, 0, 0, 1) eigval:                             20.054028988
excite: (1, 0, 1, 0) eigval:                             20.054028988
excite: (1, 0, 1, 1) eigval:                                           18.973665961
excite: (1, 1, 0, 0) eigval:                             20.054028988
excite: (1, 1, 0, 1) eigval:                                           18.973665961
excite: (1, 1, 1, 0) eigval:                                           18.973665961
excite: (1, 1, 1, 1) eigval:                                           18.973665961





19/7/16
=======

sophie:
./zorbit.py gcolor size=2 slepc excite=0 name="ex3-gcolor-excite-0.c"
./ex3-gcolor-excite-0 -eps_hermitian -eps_largest_magnitude -eps_monitor ascii -eps_nev 1 -eps_type  lanczos  -eps_monitor  -eps_tol 1e-3 > ex3-gcolor-excite-0.out
1 EPS nconv=0 first unconverged value (error) 102.381 (1.89328870e-03)
 Number of requested eigenvalues: 1
 Linear eigensolve converged (1 eigenpair) due to CONVERGED_TOL; iterations 2
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
      102.382483            2.00043e-05
 ---------------------- --------------------


stan:
./ex3 -eps_nev 1 -eps_type arnoldi -info -eps_ncv 2 -eps_monitor -eps_view_vectors binary:/export/stan1/sburton/evec.gs.bin -eps_tol 1e-3 > ex3.gs.1.out &


18/7/16
=======

./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --prefix=/suphys/sburton/ --with-64-bit-indices --known-64-bit-blas-indices --with-blas-lapack-lib=\[-L/usr/physics/ic15/composer_xe_2015.0.090/mkl/lib/intel64/,libmkl_intel_ilp64.so,libmkl_sequential.so,libmkl_core.so\]

stan:
nohup ./ex3  -eps_nev 1 -eps_type arnoldi -info -eps_ncv 2 -eps_monitor -eps_tol 1e-3 > ex3.gs.out &
 36 EPS nconv=0 first unconverged value (error) 104.004 (8.33949544e-03)

sophie:
./ex3 -eps_hermitian -eps_largest_magnitude -eps_monitor ascii -eps_nev 2 -eps_type  lanczos  -eps_monitor  -eps_tol 1e-3  > ex3.lanczos.out
 1 EPS nconv=0 first unconverged value (error) 104.075 (1.57055795e-03)
 2 EPS nconv=1 first unconverged value (error) 98.8205 (1.24262355e-02)


18/7/16
=======

matvec multiply is divided into 128 "slabs". we record the time taken (seconds) for each slab.

stan is much faster than anne!
./ex3  -eps_nev 1 -eps_type arnoldi -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2 -cutoff 200
/[11s][12s][12s][11s][12s][11s][12s][11s][12s][11s][11s][12s][11s][12s][12s][11s][12s][11s][11s][11s][11s][11s][11s][12s][11s][12s][11s][12s][11s][12s][11s][12s][13s][12s][13s][12s][13s][12s][13s][12s][13s][12s][12s][12s][13s][12s][13s][12s][13s][12s][12s][12s][13s][13s][13s][12s][13s][13s][13s][13s][13s][13s][13s][13s][12s][13s]


anne.physics.usyd.edu.au:spectrum2015$
./ex3 -eps_nev 1 -eps_type krylovschur -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2 -cutoff 40
/[39s][32s][39s]^C

anne.physics.usyd.edu.au:spectrum2015$ 
./ex3 -eps_nev 1 -eps_type krylovschur -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2 -cutoff 30
/[15s][8s][12s][10s][8s][9s][6s][11s][7s][3s][4s][4s][6s][5s][4s][7s][11s][4s][9s][5s][10s][8s][8s][11s][10s][4s][8s][6s][5s][5s][4s][7s][8s][4s][7s][5s][4s][5s][3s][6s][5s][3s][4s][4s][4s][5s][4s][6s][5s][3s][4s][3s][5s][5s][4s][6s][8s][4s][7s][5s][4s][5s][3s][6s][7s][3s][6s][4s][4s][3s][3s][5s][4s][3s][3s][3s][4s][4s][4s][4s][5s][2s][4s][3s][4s][4s]^C

anne.physics.usyd.edu.au:spectrum2015$ 
./ex3 -eps_nev 1 -eps_type krylovschur -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2 -cutoff 20
/[3s][2s][2s][3s][2s][2s][2s][3s][2s][2s][2s][3s][2s][2s][3s][2s][2s][3s][2s][2s][2s][3s][2s][2s]

anne.physics.usyd.edu.au:spectrum2015$ 
./ex3 -eps_nev 1 -eps_type krylovschur -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2 -cutoff 10
/[2s][2s][2s][2s][3s][2s][2s]^C



with cutoff=10
~~~~~~~~~~~~~~

7 EPS nconv=0 first unconverged value (error) 95.9864 (1.24568490e-02)
EPSStoppingBasic(): Linear eigensolver finished successfully: 1 eigenpairs converged at iteration 8
 Linear eigensolve converged (1 eigenpair) due to CONVERGED_TOL; iterations 8
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
       96.011691              0.0080649
 ---------------------- --------------------



stan.physics.usyd.edu.au:spectrum2015$ ./ex3  -eps_nev 1 -eps_type arnoldi -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2
 7 EPS nconv=0 first unconverged value (error) 96.139 (1.24598429e-02)
EPSStoppingBasic(): Linear eigensolver finished successfully: 1 eigenpairs converged at iteration 8
[0]PETSC ERROR: Out of memory. This could be due to allocating
[0]PETSC ERROR: Memory allocated 206158549104 Memory used by process 199236468736
[0]PETSC ERROR: Try running with -malloc_dump or -malloc_log for info.
[0]PETSC ERROR: Memory requested 34359739972





17/7/16
=======

time ./ex3 -eps_nev 1 -eps_ncv 2 -eps_type arnoldi -eps_largest_real -eps_monitor -eps_tol 1e-2 -cutoff 5


krylovschur uses one matvec per iteration (except first time), arnoldi uses two matvecs per iteration.
krylovschur exhausts memory on stan, but lives on anne.

./ex3 -eps_nev 1 -eps_type krylovschur -info -eps_ncv 2 -eps_monitor -eps_tol 1e-2


./ex3 -eps_nev 1 -eps_ncv 2 -eps_type arnoldi -eps_largest_real -eps_monitor -eps_tol 1e-2

 Number of requested eigenvalues: 1
 Linear eigensolve converged (1 eigenpair) due to CONVERGED_TOL; iterations 27
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
       90.773283             0.00994919

compared to "exact" answer 90.826723 



17/7/16
=======

[0] PetscInitialize(): PETSc successfully started: number of processors = 1
[0] PetscInitialize(): Running on machine: stan.physics.usyd.edu.au
[0] SlepcInitialize(): SLEPc successfully started

Hamiltonian Eigenproblem (matrix-free version), n=4294967296

[0] PetscCommDuplicate(): Duplicating a communicator 1140850688 -2080374784 max tags = 536870911
[0] PetscCommDuplicate(): Using internal PETSc communicator 1140850688 -2080374784
EPSSolve
[0] STSetUp(): Setting up new ST
BVSetRandomColumn: 0
BVSetRandomColumn: 0 Done
/................................................................................................................................\/......................[0]PETSC ERROR: ------------------------------------------------------------------------
[0]PETSC ERROR: Caught signal number 1 Hang up: Some other process (or the batch system) has told this process to end


17/7/16
=======

anne.physics.usyd.edu.au:spectrum2015$ time ./ex3 -eps_nev 5 -eps_type arnoldi -eps_largest_real

Hamiltonian Eigenproblem (matrix-free version), n=262144

EPSSolve
BVSetRandomColumn: 0
BVSetRandomColumn: 0 Done
................................................................................................................................................................................................................................................................................................................................................................................................. Solution method: arnoldi

 Number of requested eigenvalues: 5
 Linear eigensolve converged (5 eigenpairs) due to CONVERGED_TOL; iterations 22
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
.       90.826723            5.13852e-09
.       82.265212            5.02958e-10
.       82.265212            1.27292e-09
.       82.265212            4.70252e-09
.       82.265212            1.49351e-10
 ---------------------- --------------------

real 0m55.255s
user 0m55.169s
sys0m0.040s




./ex3 -n 64 -eps_nev 5 -eps_type arnoldi -eps_largest_real

Hamiltonian Eigenproblem (matrix-free version), n=64

EPSSolve
.................................... Solution method: arnoldi

 Number of requested eigenvalues: 5
 Linear eigensolve converged (10 eigenpairs) due to CONVERGED_TOL; iterations 2
 ---------------------- --------------------
            k             ||Ax-kx||/||kx||
 ---------------------- --------------------
.       25.455844            3.98097e-16
.       16.970563            6.12659e-16
.       16.970563            9.89978e-16
.       16.970563            4.84126e-16
.       16.970563            2.59169e-16
.       16.970563            3.16837e-16
.       16.970563            3.33551e-16
.        8.485281            5.41196e-16
.        8.485281            1.11354e-15
.        8.485281            7.89887e-16
 ---------------------- --------------------



17/7/16
=======

hacked on arch-linux2-c-debug/lib/petsc/conf/petscvariables
to get it to link to the libmkl_intel_ilp64.


  I think it failed because of the goofy way Matt wants libraries passed in. He wants \[-L/usr/physics/ic15/composer_xe_2015.0.090/mkl/lib/intel64/,libmkl_intel_ilp64.so,libmkl_sequential.so,libmkl_core.so\]


same problem with OpenBlas

Breakpoint 2, 0x00007ffff4f4cbd0 in dgemv_ ()
   from /usr/physics/ic15/composer_xe_2015.0.090/mkl/lib/intel64/libmkl_intel_lp64.so
(gdb) bt
#0  0x00007ffff4f4cbd0 in dgemv_ () from /usr/physics/ic15/composer_xe_2015.0.090/mkl/lib/intel64/libmkl_intel_lp64.so
#1  0x00007ffff5e14b4b in BVDotVec_BLAS_Private (bv=0x6ba6b0, n_=4294967296, k_=1, A=0x7fe7f23b3650, x=0x7fe7f23b3650, 
    y=0x75a3b0, mpi=PETSC_FALSE) at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvblas.c:274
#2  0x00007ffff5dcbd86 in BVDotVec_Svec (X=0x6ba6b0, y=0x74dbc0, m=0x75a3b0)
    at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/impls/svec/svec.c:150
#3  0x00007ffff5dffd58 in BVDotVec (X=0x6ba6b0, y=0x74dbc0, m=0x75a3b0)
    at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvglobal.c:191
#4  0x00007ffff5e1aad9 in BVOrthogonalizeCGS1 (bv=0x6ba6b0, j=0, v=0x0, H=0x75a3b0, onorm=0x7fffffffdc28, 
    norm=0x7fffffffdc20) at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvorthog.c:81
#5  0x00007ffff5e1c1bb in BVOrthogonalizeCGS (bv=0x6ba6b0, j=0, v=0x0, H=0x0, norm=0x7fffffffddb0, lindep=0x7fffffffddac)
    at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvorthog.c:214
#6  0x00007ffff5e1ddfd in BVOrthogonalizeColumn (bv=0x6ba6b0, j=0, H=0x0, norm=0x7fffffffddb0, lindep=0x7fffffffddac)
    at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvorthog.c:371
#7  0x00007ffff6050986 in EPSGetStartVector (eps=0x6a3ee0, i=0, breakdown=0x0)
    at /suphys/sburton/local/slepc-3.7.1/src/eps/interface/epssolve.c:758
#8  0x00007ffff5f52812 in EPSSolve_Power (eps=0x6a3ee0) at /suphys/sburton/local/slepc-3.7.1/src/eps/impls/power/power.c:103
#9  0x00007ffff6049b28 in EPSSolve (eps=0x6a3ee0) at /suphys/sburton/local/slepc-3.7.1/src/eps/interface/epssolve.c:101
#10 0x0000000000401430 in main ()
(gdb) up
#1  0x00007ffff5e14b4b in BVDotVec_BLAS_Private (bv=0x6ba6b0, n_=4294967296, k_=1, A=0x7fe7f23b3650, x=0x7fe7f23b3650, 
    y=0x75a3b0, mpi=PETSC_FALSE) at /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvblas.c:274
274    if (n) PetscStackCallBLAS("BLASgemv",BLASgemv_("C",&n,&k,&done,A,&n,x,&one,&zero,y,&one));
(gdb) print n
$1 = 4294967296
(gdb) print sizeof(n)
$2 = 8
(gdb) step
Single stepping until exit from function dgemv_,
which has no line number information.

Intel MKL ERROR: Parameter 6 was incorrect on entry to DGEMV .
PetscMallocValidate (line=274, function=0x7ffff620ebd0 "BVDotVec_BLAS_Private", 
    file=0x7ffff620e950 "/suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvblas.c")
    at /suphys/sburton/local/petsc/src/sys/memory/mtr.c:128



./eps/interface/epssolve.c:// some hacking - SB



[1]+  Exit 1                  nice nohup ./ex3 -eps_nev 1 -eps_type power -n 65536 -info -eps_ncv 2 -eps_mpd 1 > ex3.2.out
anne.physics.usyd.edu.au:spectrum2015$ 
anne.physics.usyd.edu.au:spectrum2015$ cat ex3.2.out 
[0] PetscInitialize(): PETSc successfully started: number of processors = 1
[0] PetscInitialize(): Running on machine: anne.physics.usyd.edu.au
[0] SlepcInitialize(): SLEPc successfully started

2-D Laplacian Eigenproblem (matrix-free version), N=4294967296 (65536x65536 grid)

[0] PetscCommDuplicate(): Duplicating a communicator 1140850688 -2080374784 max tags = 536870911
[0] PetscCommDuplicate(): Using internal PETSc communicator 1140850688 -2080374784
EPSSolve
[0] EPSSetUp_Power(): Warning: parameter mpd ignored
[0] STSetUp(): Setting up new ST
BVSetRandomColumn: 0

Intel MKL ERROR: Parameter 6 was incorrect on entry to DGEMV .
[0] BV_SafeSqrt(): Zero norm, either the vector is zero or a semi-inner product is being used

Intel MKL ERROR: Parameter 6 was incorrect on entry to DGEMV .
[0]PETSC ERROR: --------------------- Error Message --------------------------------------------------------------
[0]PETSC ERROR: Initial vector is zero or belongs to the deflation space
[0]PETSC ERROR: See http://www.mcs.anl.gov/petsc/documentation/faq.html for trouble shooting.
[0]PETSC ERROR: Petsc Release Version 3.7.2, unknown 
[0]PETSC ERROR: ./ex3 on a arch-linux2-c-debug named anne.physics.usyd.edu.au by sburton Sat Jul 16 21:29:09 2016
[0]PETSC ERROR: Configure options --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --prefix=/suphys/sburton/ --with-64-bit-indices --known-64-bit-blas-indices --with-blas-lapack-dir=/usr/physics/ic15/composer_xe_2015.0.090/mkl/lib/intel64
[0]PETSC ERROR: #1 EPSGetStartVector() line 761 in /suphys/sburton/local/slepc-3.7.1/src/eps/interface/epssolve.c
[0]PETSC ERROR: #2 EPSSolve_Power() line 103 in /suphys/sburton/local/slepc-3.7.1/src/eps/impls/power/power.c
[0]PETSC ERROR: #3 EPSSolve() line 101 in /suphys/sburton/local/slepc-3.7.1/src/eps/interface/epssolve.c
[0]PETSC ERROR: #4 main() line 100 in ex3.c
[0]PETSC ERROR: PETSc Option Table entries:
[0]PETSC ERROR: -eps_mpd 1
[0]PETSC ERROR: -eps_ncv 2
[0]PETSC ERROR: -eps_nev 1
[0]PETSC ERROR: -eps_type power
[0]PETSC ERROR: -info
[0]PETSC ERROR: -n 65536
[0]PETSC ERROR: ----------------End of Error Message -------send entire error message to petsc-maint@mcs.anl.gov----------
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0
[unset]: aborting job:
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0



16/7/16
=======



XXX time ./zorbit.py gcolor2 orbiham
XXX Hx: 10
XXX Hxr: 10
XXX Gxr: 18
XXX span: 262144
XXX nnz: 7077888
XXX degrees: [63]
XXX pnauty.init_graph 262144 16515072 63
XXX pnauty.search
XXX pnauty.search: Automorphism group size = 36
XXX orbits: 14400
XXX 
XXX eigval, degeneracy:
    XXX (63.5428803189+0j) 3
    XXX (63.7536750548+0j) 2
    XXX (65.1198568475+0j) 4
    XXX (65.1421882538+0j) 4
    XXX (66.6022115115+0j) 3
    XXX (67.0936245341+0j) 4
    XXX (69.2966322895+0j) 2
    XXX (70.1529557268+0j) 4
    XXX (71.3182743227+0j) 2
    XXX (73.6813685356+0j) 2
    XXX (73.703699942+0j) 3
    XXX (75.6551362222+0j) 2
    XXX (78.7144674149+0j) 2
    XXX (82.2652116301+0j) 2
    XXX (90.8267233182+0j) 1
XXX 
XXX real13m42.126s
XXX user13m26.948s
XXX 



15/7/16
=======

./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --prefix=/suphys/sburton/ --with-64-bit-indices --known-64-bit-blas-indices --with-blas-lapack-dir=/usr/physics/ic15/composer_xe_2015.0.090/mkl/lib/intel64

./ex3 -eps_hermitian -eps_largest_magnitude -eps_monitor ascii -eps_nev 1 -eps_type power -n 65536 > ex3.1.out

export SLEPC_DIR=/suphys/sburton/local/slepc-3.7.1
export PETSC_DIR=/suphys/sburton/local/petsc
export PETSC_ARCH=arch-linux2-c-debug


./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --prefix=/suphys/sburton/ --with-64-bit-indices --known-64-bit-blas-indices --with-blas-lapack-dir=/usr/physics/mwa/openblas/

configure petsc:

./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-fblaslapack --download-mpich --prefix=/suphys/sburton/ --with-64-bit-indices


2-D Laplacian Eigenproblem (matrix-free version), N=4294967296 (65536x65536 grid)

[0]PETSC ERROR: --------------------- Error Message --------------------------------------------------------------
[0]PETSC ERROR: Argument out of range
[0]PETSC ERROR: Array too long for BLAS/LAPACK
[0]PETSC ERROR: See http://www.mcs.anl.gov/petsc/documentation/faq.html for trouble shooting.
[0]PETSC ERROR: Petsc Release Version 3.7.2, unknown 
[0]PETSC ERROR: ./ex3 on a arch-linux2-c-debug named stan.physics.usyd.edu.au by sburton Fri Jul 15 01:15:10 2016
[0]PETSC ERROR: Configure options --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-fblaslapack --download-mpich --prefix=/suphys/sburton/ --with-64-bit-indices
[0]PETSC ERROR: #1 PetscBLASIntCast() line 2253 in /suphys/sburton/include/petscsys.h
[0]PETSC ERROR: #2 BVDotVec_BLAS_Private() line 262 in /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvblas.c
[0]PETSC ERROR: #3 BVDotVec_Svec() line 150 in /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/impls/svec/svec.c
[0]PETSC ERROR: #4 BVDotVec() line 191 in /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvglobal.c
[0]PETSC ERROR: #5 BVOrthogonalizeCGS1() line 81 in /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvorthog.c
[0]PETSC ERROR: #6 BVOrthogonalizeCGS() line 214 in /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvorthog.c
[0]PETSC ERROR: #7 BVOrthogonalizeColumn() line 371 in /suphys/sburton/local/slepc-3.7.1/src/sys/classes/bv/interface/bvorthog.c
[0]PETSC ERROR: #8 EPSGetStartVector() line 750 in /suphys/sburton/local/slepc-3.7.1/src/eps/interface/epssolve.c
[0]PETSC ERROR: #9 EPSSolve_Power() line 103 in /suphys/sburton/local/slepc-3.7.1/src/eps/impls/power/power.c
[0]PETSC ERROR: #10 EPSSolve() line 101 in /suphys/sburton/local/slepc-3.7.1/src/eps/interface/epssolve.c
[0]PETSC ERROR: #11 main() line 70 in ex3.c
[0]PETSC ERROR: PETSc Option Table entries:
[0]PETSC ERROR: -eps_hermitian
[0]PETSC ERROR: -eps_largest_magnitude
[0]PETSC ERROR: -eps_monitor ascii
[0]PETSC ERROR: -eps_nev 1
[0]PETSC ERROR: -eps_type power
[0]PETSC ERROR: -n 65536
[0]PETSC ERROR: ----------------End of Error Message -------send entire error message to petsc-maint@mcs.anl.gov----------
application called MPI_Abort(MPI_COMM_WORLD, 63) - process 0
[unset]: aborting job:
application called MPI_Abort(MPI_COMM_WORLD, 63) - process 0



14/7/16
=======

XXX time ./zorbit.py gcolor2 excite=38 sparse lanczos
XXX span: 262144
XXX nnz: 7077888
XXX building Hs
XXX eigval, degeneracy:
    XXX 75.9733182342 3
    XXX 78.3826290621 3
    XXX 78.6303238176 3
    XXX 81.9333732773 3
    XXX 82.0962886806 3
    XXX 90.4948849654 1 # <---- ouch... it's a fat stabilizer :P
XXX 
XXX 
XXX time ./zorbit.py gcolor2 excite=0 sparse lanczos
XXX span: 262144
XXX . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
XXX nnz: 7077888
XXX building Hs
XXX 
XXX eigval, degeneracy:
    XXX 78.0409318465 3
    XXX 78.535955054 1
    XXX 78.7514474673 1
    XXX 79.0733223938 1
    XXX 86.6024435346 1
XXX 
XXX 
XXX time ./zorbit.py gcolor2 sparse  lanczos
XXX span: 262144
XXX nnz: 7077888
XXX eigval, degeneracy:
    XXX 71.3182743227 6
    XXX 73.6813685356 6
    XXX 73.703699942 9
    XXX 75.6551362222 6
    XXX 78.7144674149 6
    XXX 82.2652116301 6
    XXX 90.8267233182 1
XXX 
XXX real 16m4.286s
XXX user 15m59.140s



Bug found: Lanczos iteration requires a positive definite matrix

14/7/16
=======

time ./zorbit.py gcolor2 orbiham sparse
Hx:
1111...............1111................
.11.1111............11.1111............
..11...11............11...11...........
....11...11............11...11.........
......111..111...........111..111......
.........11...11............11...11....
.....11...11...11.......11...11...11...
...........11...11............11...11..
............11...11............11...11.
...................11111111111111111111
Hxr:
1111...............1111................
.11.1111............11.1111............
..11...11............11...11...........
....11...11............11...11.........
.....11...11...11.......11...11...11...
......111..111...........111..111......
.........11...11............11...11....
...........11...11............11...11..
............11...11............11...11.
...................11111111111111111111
Gxr: 18
...1....1.1..1.1..1...1....1.1..1.1..1.
.......11.................11...........
........1....11111.........1....11111..
..........1..1.1..1..........1..1.1..1.
.............1....1.............1....1.
..............11.................11....
...............1111...............1111.
................11.................11..
.................11.................11.
....................11.1111............
.....................11...11...........
.......................1111111111111111
........................11...11...11...
.........................111..111......
............................11...11....
..............................11...11..
...............................11...11.
.................................111111
span: 262144
building
nnz: 7077888
degrees: [63]
pnauty.init_graph 262144 16515072 63
pnauty.search
pnauty.search: Automorphism group size = 36
orbits: 14400
orbiham:
[[ 63.   3.  15. ...,   0.   0.   0.]
 [  1.  55.   0. ...,   0.   0.   0.]
 [  5.   0.  57. ...,   0.   0.   0.]
 ..., 
 [  0.   0.   0. ..., -21.   5.   0.]
 [  0.   0.   0. ...,  15. -27.   0.]
 [  0.   0.   0. ...,   0.   0.  -9.]]


eigval, degeneracy:
    (-71.6115662622+0j) 1
    (-66.0686090275+0j) 2
    (-64.0469669943+0j) 2
    (65.1198568475+0j) 4
    (65.1421882538+0j) 4
    (66.6022115115+0j) 3
    (67.0936245341+0j) 4
    (69.2966322895+0j) 2
    (70.1529557268+0j) 4
    (71.3182743227+0j) 2
    (73.6813685356+0j) 2
    (73.703699942+0j) 3
    (75.6551362222+0j) 2
    (78.7144674149+0j) 2
    (82.2652116301+0j) 2
    (90.8267233182+0j) 1

real 14m18.092s
user 14m11.732s



time ./zorbit.py compass l=5 orbiham sparse
Hx:
11...11...11...11...11...
.11...11...11...11...11..
..11...11...11...11...11.
...11...11...11...11...11
Hxr:
11...11...11...11...11...
.11...11...11...11...11..
..11...11...11...11...11.
...11...11...11...11...11
Gxr: 16
.....11...11...11...11...
......11...11...11...11..
.......11...11...11...11.
........11...11...11...11
..........11...11...11...
...........11...11...11..
............11...11...11.
.............11...11...11
...............11...11...
................11...11..
.................11...11.
..................11...11
....................11...
.....................11..
......................11.
.......................11
span: 65536
building H. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
nnz: 1638400
degrees: [25]
pnauty.init_graph 65536 1638400 25
pnauty.search
pnauty.search: Automorphism group size = 200
orbits: 430
orbiham:
[[ 25.  25.   0. ...,   0.   0.   0.]
 [  1.  17.   4. ...,   0.   0.   0.]
 [  0.   2.  19. ...,   0.   0.   0.]
 ..., 
 [  0.   0.   0. ..., -15.   0.   0.]
 [  0.   0.   0. ...,   0. -15.   1.]
 [  0.   0.   0. ...,   0.   5. -15.]]
eigval, degeneracy:
    ...
    (22.9002728321+0j) 1
    (23.7364902121+0j) 1
    (27.5972798745+0j) 1
    (29.0762000051+0j) 1

real0m50.524s



11/7/16
=======


time ./gorbit.py gcolor compile run excite=14 orbiham
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
[(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)]
i686-linux-gnu-gcc -O1 -pthread -fno-strict-aliasing -g -fwrapv -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -I/suphys/sburton/include/python2.7 -c c_gorbits.c -o c_gorbits.o
i686-linux-gnu-gcc -pthread -shared -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -g -fwrapv -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security c_gorbits.o -o c_gorbits.so
orbits: 1
orbits: 7 bdy: 6
orbits: 22 bdy: 15
orbits: 42 bdy: 20
orbits: 57 bdy: 15
orbits: 63 bdy: 6
orbits: 64 bdy: 1
orbits: 64 bdy: 0
orbits: 64
[[ 12.   0.   0. ...,   0.   0.   0.]
 [  0.   8.   0. ...,   0.   0.   0.]
 [  0.   0.   4. ...,   0.   0.   0.]
 ..., 
 [  0.   0.   0. ..., -10.   0.   0.]
 [  0.   0.   0. ...,   0.  -6.   0.]
 [  0.   0.   0. ...,   0.   0.  -2.]]
eigval, degeneracy:
    (-22.2147550419+0j) 1
    (-15.8901997215+0j) 3
    (-13.7294736676+0j) 3
    (-9.56564440119+0j) 3
    (-7.40491834729+0j) 9
    (-5.24419229339+0j) 3
    (-3.24108908085+0j) 1
    (-1.08036302695-3.37293204818e-16j) 9
    (1.08036302695+0j) 9
    (3.24108908085+0j) 1
    (5.24419229339+0j) 3
    (7.40491834729+0j) 9
    (9.56564440119+0j) 3
    (13.7294736676+0j) 3
    (15.8901997215+0j) 3
    (22.2147550419+0j) 1
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
isomorphisms: 36
components: 16
orbiham:
[[  4.   6.   0.   6.   0.   3.   3.   0.   0.   0.   0.   0.   0.   0.  0.   0.]
 [  6.   2.   6.   0.   3.   0.   0.   3.   0.   0.   0.   0.   0.   0.  0.   0.]
 [  0.   6.  -4.   6.   0.   0.   0.   0.   0.   3.   0.   3.   0.   0.  0.   0.]
 [  6.   0.   6.  -2.   0.   0.   0.   0.   3.   0.   3.   0.   0.   0.  0.   0.]
 [  0.   9.   0.   0.   8.   0.   6.   0.   0.   0.   0.   0.   0.   3.  0.   0.]
 [  9.   0.   0.   0.   0.   6.   0.   0.   6.   0.   0.   0.   3.   0.  0.   0.]
 [  9.   0.   0.   0.   6.   0.  10.   0.   0.   0.   0.   0.   3.   0.  0.   0.]
 [  0.   9.   0.   0.   0.   0.   0.   0.   0.   6.   0.   0.   0.   3.  0.   0.]
 [  0.   0.   0.   9.   0.   6.   0.   0.   0.   0.   0.   0.   0.   0.  3.   0.]
 [  0.   0.   9.   0.   0.   0.   0.   6.   0.  -6.   0.   0.   0.   0.  0.   3.]
 [  0.   0.   0.   9.   0.   0.   0.   0.   0.   0.  -8.   6.   0.   0.  3.   0.]
 [  0.   0.   9.   0.   0.   0.   0.   0.   0.   0.   6. -10.   0.   0.  0.   3.]
 [  0.   0.   0.   0.   0.   9.   9.   0.   0.   0.   0.   0.  12.   0.  0.   0.]
 [  0.   0.   0.   0.   9.   0.   0.   9.   0.   0.   0.   0.   0.   6.  0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   9.   0.   9.   0.   0.   0.  -6.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   9.   0.   9.   0.   0.  0. -12.]]
eigval, degeneracy:
    -22.2147550419 1
    -15.8901997215 1
    -13.7294736676 1
    -9.56564440119 1
    -7.40491834729 1
    -5.24419229339 1
    -3.24108908085 1
    -1.08036302695 1
    1.08036302695 1
    3.24108908085 1
    5.24419229339 1
    7.40491834729 1
    9.56564440119 1
    13.7294736676 1
    15.8901997215 1
    22.2147550419 1




time ./gorbit.py gcolor compile run orbiham
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
orbits: 1
orbits: 7 bdy: 6
orbits: 22 bdy: 15
orbits: 42 bdy: 20
orbits: 57 bdy: 15
orbits: 63 bdy: 6
orbits: 64 bdy: 1
orbits: 64 bdy: 0
orbits: 64
[[ 18.   0.   0. ...,   0.   0.   0.]
 [  0.   6.   0. ...,   0.   0.   0.]
 [  0.   0.   6. ...,   0.   0.   0.]
 ..., 
 [  0.   0.   0. ..., -12.   0.   0.]
 [  0.   0.   0. ...,   0. -12.   0.]
 [  0.   0.   0. ...,   0.   0.   0.]]
eigval, degeneracy:
    (-25.4558441227+0j) 1
    (-16.9705627485+0j) 6
    (-8.48528137424+0j) 15
    (-2.68061468112e-15+0j) 20
    (8.48528137424+0j) 15
    (16.9705627485+0j) 6
    (25.4558441227+0j) 1
isomorphisms: 720
components: 7
orbiham:
[[  0.   9.   9.   0.   0.   0.   0.]
 [ 12.   6.   0.   6.   0.   0.   0.]
 [ 12.   0.  -6.   0.   6.   0.   0.]
 [  0.  15.   0.  12.   0.   3.   0.]
 [  0.   0.  15.   0. -12.   0.   3.]
 [  0.   0.   0.  18.   0.  18.   0.]
 [  0.   0.   0.   0.  18.   0. -18.]]
eigval, degeneracy:
    -25.4558441227 1
    -16.9705627485 1
    -8.48528137424 1
    2.83346476095e-15 1
    8.48528137424 1
    16.9705627485 1
    25.4558441227 1



Dividing by code lattice isomorphisms (S_4) still doesn't find
all they symmetry! Left with 11 orbits, eigval degeneracies are
1, 1, 2, 3, 2, 1, 1. I guess the goal is to get down to 7 orbits
with non-degenerate eigenvalues.

time ./gorbit.py gcolor compile run isomorph
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
isomorphisms: 24
orbits: 1
orbits: 2 bdy: 1
orbits: 4 bdy: 2
orbits: 7 bdy: 3
orbits: 9 bdy: 2
orbits: 10 bdy: 1
orbits: 11 bdy: 1
orbits: 11 bdy: 0
orbits: 11
[[ 18.   0.   0.  18.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   6.   3.   6.   0.   0.   6.   3.   0.   0.   0.]
 [  0.   9.   0.   0.   0.   9.   0.   0.   0.   0.   0.]
 [  3.  12.   0.  12.   3.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   6.   6.   0.  12.   0.   0.   0.   0.]
 [  0.   0.   3.   0.   0.  -6.   6.   3.   0.   6.   0.]
 [  0.   6.   0.   0.   3.   6.   0.   0.   3.   0.   0.]
 [  0.   9.   0.   0.   0.   9.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.  12.   0.  -6.   6.   0.]
 [  0.   0.   0.   0.   0.  12.   0.   0.   3. -12.   3.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.  18. -18.]]
eigval, degeneracy:
    (-25.4558441227+0j) 1
    (-16.9705627485+0j) 1
    (-8.48528137424+0j) 2
    (5.38276234133e-16-1.71427025476e-16j) 3
    (8.48528137424+0j) 2
    (16.9705627485+0j) 1
    (25.4558441227+0j) 1




time ./gorbit.py size=1 gcolor run
guage ops: 18
qubits: 15
stabs: 4
Lattice(3:15, 2:28, 1:18, 0:4)
orbits: 1
orbits: 7 bdy: 6
orbits: 22 bdy: 15
orbits: 42 bdy: 20
orbits: 57 bdy: 15
orbits: 63 bdy: 6
orbits: 64 bdy: 1
orbits: 64 bdy: 0
orbits: 64
eigval, degeneracy:
    -25.4558441227 1
    -16.9705627485 6
    -8.48528137424 15
    -5.94889003719e-15 20
    8.48528137424 15
    16.9705627485 6
    25.4558441227 1



10/7/16
=======

Only four-fold symmetry in this color code:

time ./gorbit.py size=2 isomorph
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
count: 4

real1m40.836s
user1m40.676s


time ./gorbit.py size=2 compile run
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
i686-linux-gnu-gcc -O1 -pthread -fno-strict-aliasing -g -fwrapv -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -I/suphys/sburton/include/python2.7 -c c_gorbits.c -o c_gorbits.o
i686-linux-gnu-gcc -pthread -shared -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -g -fwrapv -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security c_gorbits.o -o c_gorbits.so
orbits: 1
orbits: 53 bdy: 52
orbits: 1315 bdy: 1262
orbits: 20251 bdy: 18936
orbits: 20251

real3m3.516s
user3m3.204s



time ./gorbit.py compile size=2
guage ops: 80
qubits: 65
stabs: 16
Lattice(3:65, 2:128, 1:80, 0:16)
i686-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -I/suphys/sburton/include/python2.7 -c c_gorbits.c -o c_gorbits.o
i686-linux-gnu-gcc -pthread -shared -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security c_gorbits.o -o c_gorbits.so
marked: 1
marked: 53 bdy: 52
marked: 1315 bdy: 1262
marked: 20251 bdy: 18936
marked: 20251

real 4m46.434s
user 4m45.936s



10/7/16
=======

flipping xstabilizers makes a cheeger cut in the wavefunction.

flippin zstabs does not use a cheeger cut, it's another +ve
wavefunction but it bumps the
wavefunction to a disconnected (from gs etc.) support.
Same orbi-hamiltonian, but diagonnals offset ?

8/7/16
======

gcolor model
~~~~~~~~~~~~

time ./lanczos.py gcolor k=80
eigval, degeneracy:
    17.6382638193 10
    18.973665961 28 <---- flip 3 stabs ??
    20.054028988 24 <---- flip 2 stabs ??
    22.2147550419 16  <------- 1st excited, 8 stabs * 2 logical = 16
    25.4558441227 2


XXX this misses two dimensions! XXX
XXX time ./lanczos.py gcolor  k=20 
    XXX 20.054028988 4+
    XXX 22.2147550419 14  <------- 1st excited XXX
    XXX 25.4558441227 2


time ./lanczos.py gcolor  k=20 stabilize 
eigval, degeneracy:
    8.48528137424 6+
    16.9705627485 12
    25.4558441227 2
iterations: 103
nnz: 2048

time ./lanczos.py gcolor  k=20 stabilize flip=1
eigval, degeneracy:
    9.56564440119 6
    13.7294736676 6
    15.8901997215 6
    22.2147550419 2  <---------- 1st excited




l=4 compass model
~~~~~~~~~~~~~~~~~


time ./lanczos.py compass l=4 k=40 which=LA 
eigval, degeneracy:
    16.9521090478 10
    18.0705549055 4
    18.3366619361 8
    18.3692998155 16 <--------- 8 stabs * 2
    19.0129032917 2



time ./lanczos.py compass l=4 k=20 which=LA stabilize
eigval, degeneracy:
    12.3873405351 8+
    12.8228924189 8
    16.3357046498 2
    19.0129032917 2
iterations: 551


time ./lanczos.py compass l=4 k=20 which=LA stabilize flip=1
eigval, degeneracy:
    11.8211856413 2+
    11.8655888273 2
    12.109653381 4
    12.5976257038 2
    12.8386372895 2
    14.3460572266 4
    14.6431789163 2
    18.3692998155 2  <------- 1st excited





l=3 compass model
~~~~~~~~~~~~~~~~~

time ./lanczos.py compass l=3 exact
eigval, degeneracy:
    ...
    10.2459954027 12 # <------------- 1st excited
    11.2111025509 2

1st excited corresponds to single flipped stabilizer (6 of these * 2 logops):

time ./lanczos.py compass l=3 exact stabilize flip=1
eigval, degeneracy:
    ...
    10.2459954027 2 # <------------- 1st excited




7/7/16
======


gcolor orbi-hamiltonian spectrum,
spectrum exactly corresponds to the hamiltonian stabilized spectrum:
(appart from degeneracy)

25.4558441227 
16.9705627485 
8.48528137424 
-2.01077110523e-15 
-8.48528137424 
-16.9705627485 
-25.4558441227


l=3 compass orbi-hamiltonian has spectrum
# eigvals: [ 11.21110255   6.          -3.21110255]
these also live inside the stabilized hamiltonian, as verified by numerics:
eigval, degeneracy:
    -6.0 2
    -4.0 8
    -3.21110255093 2
    -4.43096980137e-15 488
    2.0 8
    6.0 2
    11.2111025509 2

we get more eigvals perhaps because compass model has more
symmetry that is not fixed by stabilizer symmetries of gauge group



searching symmetry in graph
~~~~~~~~~~~~~~~~~~~~~~~~~~~


fixing stabilizers in compass model:
time ./code.py compass isomorph depth=1  fixstabs
Gx: 9
Gz: 9
G: 64
stab: 0 [0 0 0 0 0 0 0 0 0]
idx: 0 9
stab: 1 [1 1 0 1 1 0 1 1 0]
stab: 2 [0 1 1 0 1 1 0 1 1]
stab: 3 [1 0 1 1 0 1 1 0 1]
idx: 4 1
idx: 40 -3
. . . . . . 
6 <--------- only 6 left


fixing stabilizers in gcolor gives only trivial symmetry:
time ./code.py gcolor isomorph depth=1 fixstabs
Gx: 18
Gz: 18
G: 1024
stab: 0 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
idx: 0 18
stab: 1 [1 1 1 1 1 1 1 1 0 0 0 0 0 0 0]
stab: 2 [1 1 1 1 0 0 0 0 1 1 1 1 0 0 0]
stab: 3 [0 0 0 0 1 1 1 1 1 1 1 1 0 0 0]
stab: 4 [1 1 0 0 1 1 0 0 1 1 0 0 1 1 0]
stab: 5 [0 0 1 1 0 0 1 1 1 1 0 0 1 1 0]
stab: 6 [0 0 1 1 1 1 0 0 0 0 1 1 1 1 0]
stab: 7 [1 1 0 0 0 0 1 1 0 0 1 1 1 1 0]
stab: 8 [1 0 1 0 1 0 1 0 1 0 1 0 1 0 1]
stab: 9 [0 1 0 1 0 1 0 1 1 0 1 0 1 0 1]
stab: 10 [0 1 0 1 1 0 1 0 0 1 0 1 1 0 1]
stab: 11 [1 0 1 0 0 1 0 1 0 1 0 1 1 0 1]
stab: 12 [0 1 1 0 0 1 1 0 0 1 1 0 0 1 1]
stab: 13 [1 0 0 1 1 0 0 1 0 1 1 0 0 1 1]
stab: 14 [1 0 0 1 0 1 1 0 1 0 0 1 0 1 1]
stab: 15 [0 1 1 0 1 0 0 1 1 0 0 1 0 1 1]
idx: 16 12
idx: 112 6
idx: 352 0
idx: 672 -6
idx: 912 -12
idx: 1008 -18
. 
1



time ./code.py gcolor isomorph depth=1
Gx: 18
Gz: 18
G: 1024
idx: 0 18
idx: 16 12
idx: 112 6
idx: 352 0
idx: 672 -6
idx: 912 -12
idx: 1008 -18

384

real 30m37.431s
user 30m36.022s


time ./code.py compass isomorph depth=1 
Gx: 9
Gz: 9
G: 64
idx: 0 9
idx: 4 1
idx: 40 -3
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
144
real20.551s
user20.424s


7/7/16
======

restricting to Lz=1 subspace gives 1st excited only 4 dim.

time ./code.py gcolor eigs
Gx: 18
Gz: 18
G: 1024
idx: 0 18
idx: 16 12
idx: 112 6
idx: 352 0
idx: 672 -6
idx: 912 -12
idx: 1008 -18
[ 16.97056275  16.97056275  16.97056275  16.97056275  18.97366596
  18.97366596  18.97366596  18.97366596  18.97366596  20.05402899
  20.05402899  20.05402899  20.05402899  20.05402899  20.05402899
  22.21475504  22.21475504  22.21475504  22.21475504  25.45584412]

real0m18.386s
user0m18.252s


5/7/16
======

flipping a single stabilizer: first excited level has 2 dimensional support (because logical ops)

1st ex level on stabilized subspace: this is perhaps the simplex symmetry of the code with
one face fixed (because this is a logop.) this group has order 6 (S_3.)

7/7/16
======

flip one stabilizer and stabilize logop:

time ./lanczos.py gcolor  k=16 logop stabilize flip=1

[ 14.80983669  14.80983669  14.80983669  14.80983669  14.80983669
  15.47753777  15.47753777  15.47753777  15.89019972  15.89019972
  15.89019972  17.63826382  17.63826382  17.63826382  18.97366596
  22.21475504]


Just stabilizing the xlogop:

time ./lanczos.py gcolor  k=16 logop

[ 20.05402899  20.05402899  20.05402899  20.05402899  20.05402899
  20.05402899  20.05402899  22.21475504  22.21475504  22.21475504
  22.21475504  22.21475504  22.21475504  22.21475504  22.21475504
  25.45584412]
iterations: 468


Also stabilizing the xlogop:

time ./lanczos.py gcolor stabilize k=10 logop

[ 20.05402899  20.05402899  20.05402899  20.05402899  20.05402899
  22.21475504  22.21475504  22.21475504  22.21475504  25.45584412]
iterations: 304


4/7/16
======

# see also: qupy/spectrum.py


# first excited level has 6 dimension support on stabilized subspace

time ./lanczos.py gcolor stabilize k=10
[ 20.05402899  20.05402899  22.21475504  22.21475504  22.21475504
  22.21475504  22.21475504  22.21475504  25.45584412  25.45584412]
iterations: 307
0 syndrome [0.99999999999999289, 0.99999999999999301, 0.99999999999999312, 0.99999999999999312]
1 syndrome [1.0000000000000075, 1.0000000000000075, 1.0000000000000075, 1.0000000000000075]
2 syndrome [1.0000000000000056, 1.0000000000000056, 1.0000000000000058, 1.0000000000000056]
3 syndrome [0.999999999999997, 0.99999999999999689, 0.99999999999999689, 0.99999999999999711]
4 syndrome [0.99999999999999889, 0.99999999999999889, 0.99999999999999878, 0.99999999999999867]
5 syndrome [1.0000000000000009, 1.0000000000000009, 1.0000000000000009, 1.0000000000000009]
6 syndrome [1.0000000000000027, 1.0000000000000027, 1.0000000000000027, 1.0000000000000027]
7 syndrome [1.0000000000000013, 1.0000000000000013, 1.0000000000000013, 1.0000000000000013]
8 syndrome [0.99999999999999845, 0.99999999999999845, 0.99999999999999833, 0.99999999999999845]
9 syndrome [0.99999999999999534, 0.99999999999999534, 0.99999999999999556, 0.99999999999999545]
nnz: 2048



4/7/16
======

# n=15 gauge color code
-----------------------


time ./lanczos.py gcolor k=20
[ 20.05402899  20.05402899  20.05402899  20.05402899  22.21475504
  22.21475504  22.21475504  22.21475504  22.21475504  22.21475504
  22.21475504  22.21475504  22.21475504  22.21475504  22.21475504
  22.21475504  22.21475504  22.21475504  25.45584412  25.45584412]
iterations: 780

real 1m52.660s
user 1m52.116s

>>> 9*2**0.5 + 3*10**0.5
22.214755041862993
>>> 18*2**0.5
25.455844122715714
>>> 


3/7/16
======

time ./orbit.py 6 compile
i686-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c c_orbits.c -o build/temp.linux-i686-2.7/c_orbits.o
i686-linux-gnu-gcc -pthread -shared -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security build/temp.linux-i686-2.7/c_orbits.o -o /home/simon/home/github/spectrum2015/c_orbits.so
marked: 1
orbits: 2 bdy: 1
orbits: 17 bdy: 15
orbits: 87 bdy: 70
orbits: 575 bdy: 488
orbits: 2967 bdy: 2392
orbits: 13118 bdy: 10151
orbits: 44882 bdy: 31764
orbits: 116442 bdy: 71560
orbits: 199161 bdy: 82719
orbits: 236452 bdy: 37291
orbits: 239012 bdy: 2560
orbits: 239012 bdy: 0
orbits: 239012

real0m148m49.652s
user0m148m29.784s
sys0m00m6.936s



time ./orbit.py 5 
marked: 1
orbits: 2 bdy: 1
orbits: 10 bdy: 8
orbits: 38 bdy: 28
orbits: 164 bdy: 126
orbits: 452 bdy: 288
orbits: 728 bdy: 276
orbits: 748 bdy: 20
orbits: 748 bdy: 0
orbits: 748

real0m1.632s
user0m1.620s
sys0m0.004s




2/7/16
=======

Compass model 
-------------

Wavefunction is monotonic with the syndrome.

!!! non monotonic syndromes:
time ./lanczos.py l=4
build_compass...1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 done
[ 18.36929982  19.01290329]
iters: 830

nnz: 4096
best: [0, 13107, 21845, 26214, 39321, 43690, 52428, 65535]
X.X.
XX..
....
.... 4.0
->
X.X.
X.X.
....
.... 8.0
0.0124124914073 -> 0.018033379324



time ./lanczos.py compass l=4
[ 18.36929982  18.36929982  19.01290329  19.01290329]
iters: 605

real 2m30.529s
user 2m23.228s
sys 0m7.108s



30/6/16
=======

!!! Reflection does not preserve monotonicity in the compass model

./code.py compass l=4 
idx: 0 16
idx: 8 8
idx: 296 4
idx: 1064 0
idx: 3032 -4
idx: 3800 -8
idx: 4088 -16
G: 4096
eigval: 19.0129032917


time ./code.py compass l=4 reflect=3032
eigval: 19.4743997344


time ./code.py compass l=4 reflect=1064
eigval: 22.1118877759

Reflection is still a valid upper bound, but need
to first prove that it's monotonic accross the boundary.


30/6/16
=======

Random gauge codes: wavefunction is not monotonic with the potential (aka syndrome.)
Compass code: wavefunction is monotonic with the potential (aka syndrome.)

Random gauge codes do not like to be truncated with reflection.

Compass code behaves much better, as long as truncation occurs
accross entire species.


./code.py compass truncate=40
Gx:
11.......
.11......
1.1......
...11....
....11...
...1.1...
......11.
.......11
......1.1
Gz:
1..1.....
.1..1....
..1..1...
...1..1..
....1..1.
.....1..1
1.....1..
.1.....1.
..1.....1
syndromes: (0, 9) (1, 9) (2, 9) (3, 9) (4, 1) (5, 1) (6, 1) (7, 1) (8, 1) (9, 1) (10, 1) (11, 1) (12, 1) (13, 1) (14, 1) (15, 1) (16, 1) (17, 1) (18, 1) (19, 1) (20, 1) (21, 1) (22, 1) (23, 1) (24, 1) (25, 1) (26, 1) (27, 1) (28, 1) (29, 1) (30, 1) (31, 1) (32, 1) (33, 1) (34, 1) (35, 1) (36, 1) (37, 1) (38, 1) (39, 1) (40, -3) (41, -3) (42, -3) (43, -3) (44, -3) (45, -3) (46, -3) (47, -3) (48, -3) (49, -3) (50, -3) (51, -3) (52, -3) (53, -3) (54, -3) (55, -3) (56, -3) (57, -3) (58, -3) (59, -3) (60, -3) (61, -3) (62, -3) (63, -3)
G: 64
eigval: 11.2111025509
eigvec: [ 0.38961022  0.38961022  0.38961022  0.38961022  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708]
truncate: 40
eigval: 12.0
[ 0.35355339  0.35355339  0.35355339  0.35355339  0.11785113  0.11785113
  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113
  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113
  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113
  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113
  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113  0.11785113
  0.11785113  0.11785113  0.11785113  0.11785113] <------------------------- OK
simon@bucket:~/home/github/spectrum2015$ ./code.py compass truncate=41
Gx:
11.......
.11......
1.1......
...11....
....11...
...1.1...
......11.
.......11
......1.1
Gz:
1..1.....
.1..1....
..1..1...
...1..1..
....1..1.
.....1..1
1.....1..
.1.....1.
..1.....1
syndromes: (0, 9) (1, 9) (2, 9) (3, 9) (4, 1) (5, 1) (6, 1) (7, 1) (8, 1) (9, 1) (10, 1) (11, 1) (12, 1) (13, 1) (14, 1) (15, 1) (16, 1) (17, 1) (18, 1) (19, 1) (20, 1) (21, 1) (22, 1) (23, 1) (24, 1) (25, 1) (26, 1) (27, 1) (28, 1) (29, 1) (30, 1) (31, 1) (32, 1) (33, 1) (34, 1) (35, 1) (36, 1) (37, 1) (38, 1) (39, 1) (40, -3) (41, -3) (42, -3) (43, -3) (44, -3) (45, -3) (46, -3) (47, -3) (48, -3) (49, -3) (50, -3) (51, -3) (52, -3) (53, -3) (54, -3) (55, -3) (56, -3) (57, -3) (58, -3) (59, -3) (60, -3) (61, -3) (62, -3) (63, -3)
G: 64
eigval: 11.2111025509
eigvec: [ 0.38961022  0.38961022  0.38961022  0.38961022  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868  0.09571868
  0.09571868  0.09571868  0.09571868  0.09571868  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708  0.05122708
  0.05122708  0.05122708  0.05122708  0.05122708]
truncate: 41
eigval: 11.9619380296
[ 0.34916995  0.34916995  0.34916995  0.37272433  0.11485404  0.1077709
  0.11735941  0.1077709   0.1077709   0.11485404  0.1077709   0.11735941
  0.12251271  0.11753552  0.11753552  0.11485404  0.1077709   0.11735941
  0.11753552  0.11485404  0.11917999  0.12274137  0.11753552  0.11485404
  0.11485404  0.1077709   0.11753552  0.11753552  0.11917999  0.11735941
  0.12274137  0.11917999  0.12274137  0.11735941  0.12251271  0.11735941
  0.12274137  0.12274137  0.12274137  0.12251271  0.05405691] <----------------- mess


29/6/16
=======

from test.py:

[[ 18.  18.   0.   0.   0.   0.   0.]
 [  3.  12.  15.   0.   0.   0.   0.]
 [  0.   6.   6.  12.   0.   0.   0.]
 [  0.   0.   9.   0.   9.   0.   0.]
 [  0.   0.   0.  12.  -6.   6.   0.]
 [  0.   0.   0.   0.  15. -12.   3.]
 [  0.   0.   0.   0.   0.  18. -18.]]
25.4558441227
[ 0.91018171  0.37700961  0.15616249  0.06468462  0.02679325  0.01109813
  0.00459699]

eigs: 
25.4558441227 16.9705627485 8.48528137424 -2.01077110523e-15 -8.48528137424 -16.9705627485 -25.4558441227


# here we truncate adjacency matrix: eigval decreases

[[ 18.  18.   0.   0.   0.   0.]
 [  3.  12.  15.   0.   0.   0.]
 [  0.   6.   6.  12.   0.   0.]
 [  0.   0.   9.   0.   9.   0.]
 [  0.   0.   0.  12.  -6.   6.]
 [  0.   0.   0.   0.  15. -12.]]
25.4554310587
[-0.9102114  -0.37700102 -0.15613847 -0.06464459 -0.02670108 -0.01069314]

# here we truncate adjacency matrix with "reflection" trick.
# idea is that eval should increase.

[[ 18.  18.   0.   0.   0.   0.]
 [  3.  12.  15.   0.   0.   0.]
 [  0.   6.   6.  12.   0.   0.]
 [  0.   0.   9.   0.   9.   0.]
 [  0.   0.   0.  12.  -6.   6.]
 [  0.   0.   0.   0.  15.  -9.]]
eigs: [  2.54564846e+01   1.69826876e+01   8.55193309e+00   3.38500968e-16
  -9.44186204e+00  -2.05492432e+01]
[ 0.91015989  0.37703296  0.1562039   0.06474842  0.02693689  0.01172648]


# more truncating with reflection:

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  18.]]
eigs: [  2.63068312  18.          27.36931688]
[ 0.73717522 -0.62943775  0.24572507]
[  9.80580676e-01   8.19478150e-17  -1.96116135e-01]
[ 0.85062506  0.44276532  0.28354169]

# how much can we add to the potential (diagonal) 
# and still maintain the decreasing wavefunction?

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  19.]]
eigs: [  2.85815378  18.3647585   27.77708772]
[ 0.74423817 -0.62606333  0.23271068]
[ 0.98197665  0.01989913 -0.18795179]
[ 0.83539327  0.45376185  0.31019071]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  20.]]
eigs: [  3.06814556  18.70740841  28.22444602]
[ 0.75067938 -0.62272418  0.22066957]
[ 0.98303     0.03863354 -0.17933061]
[ 0.8180323   0.46466262  0.33898644]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  21.]]
eigs: [  3.26209737  19.02617077  28.71173187]
[ 0.75655752 -0.61944839  0.20953381]
[ 0.98376337  0.05608385 -0.17048236]
[ 0.79846486  0.47516341  0.36969393]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  22.]]
eigs: [  3.44136597  19.32015727  29.23847676]
[ 0.76192716 -0.6162566   0.19923555]
[ 0.98421029  0.07218402 -0.1616155 ]
[ 0.77669656  0.48493813  0.401967  ]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  23.]]
eigs: [  3.60721761  19.58931254  29.80346986]
[ 0.76683853 -0.61316334  0.18970872]
[ 0.98441104  0.08691871 -0.15290532]
[ 0.75282849  0.49366602  0.43536551]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  24.]]
eigs: [  3.76082425  19.83428699  30.40488876]
[ 0.77133733 -0.61017821  0.18089024]
[ 0.9844084   0.10031597 -0.14448807]
[ 0.72705936  0.50106058  0.46938575]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  25.]]
eigs: [  3.90326348  20.05626972  31.0404668 ]
[ 0.77546494 -0.60730694  0.17272063]
[ 0.98424407  0.11243729 -0.13646047]
[ 0.69967617  0.50689466  0.50349883]

[[ 18.  18.   0.]
 [  3.  12.  15.]
 [  0.   6.  26.]]
eigs: [  4.03552096  20.25681249  31.70766656]
[ 0.77925856 -0.60455222  0.16514452]
[ 0.98395613  0.12336692 -0.12888339]
[ 0.67103443  0.51101756  0.5371907 ]

# Guess:
# As long as row-sum of species is less than row sum of all the higher
# species then that species will remain lower.


29/6/16
=======

CFLAGS="-O0"  time ./orbit.py 6 compile
marked: 1
orbits: 2 bdy: 1
orbits: 17 bdy: 15
orbits: 87 bdy: 70
orbits: 575 bdy: 488
orbits: 2967 bdy: 2392
orbits: 13118 bdy: 10151
orbits: 44882 bdy: 31764
orbits: 116442 bdy: 71560
orbits: 199161 bdy: 82719
orbits: 236452 bdy: 37291
orbits: 239012 bdy: 2560
orbits: 239012 bdy: 0
orbits: 239012
17822.80user 
30.26system 
6:12:29elapsed 79%CPU (0avgtext+0avgdata 29772maxresident)k


28/6/16
=======

time ./orbit.py 5 
marked: 1
orbits: 2 bdy: 1
orbits: 10 bdy: 8
orbits: 38 bdy: 28
orbits: 164 bdy: 126
orbits: 452 bdy: 288
orbits: 728 bdy: 276
orbits: 748 bdy: 20
orbits: 748 bdy: 0
orbits: 748

real0m5.354s
user0m5.284s
sys0m0.016s


time ./orbit.py 4 
marked: 1
orbits: 2 bdy: 1
orbits: 10 bdy: 8
orbits: 16 bdy: 6
orbits: 34 bdy: 18
orbits: 34 bdy: 0
orbits: 34

real0m50m0.080s
user0m50m0.064s
sys0m00m0.008s


time ./orbit.py 3 
marked: 1
orbits: 2 bdy: 1
orbits: 3 bdy: 1
orbits: 3 bdy: 0
orbits: 3





27/6/16
=======

compass model l=4
178 [0] delta = 3.41382056834e-09 1.0 <E> = 19.01290329171, nnz = 4096
species: 22
  8 0.00182074315303
 32 0.00266780833703
128 0.00307702434322
128 0.00398434400773
256 0.00447838879488
512 0.00450407806563
 16 0.00508843062203
 64 0.00582087013709
256 0.00604661501563
512 0.00646940098868
 32 0.00655330965216
192 0.00711793184026
512 0.00778734022099
 64 0.0094037689892
256 0.0100522998408
512 0.0124124907909
 64 0.0129866678413
256 0.0140588910481
 32 0.0180333781408
128 0.0271615431333
128 0.042169540594
  8 0.223941031224


./local.py compass l=5 Jx=1. Jz=1. species

22 [0] delta = 0.0161353853345 0.999739666286 <E> = 28.75843330891, nnz = 1048576
species: 417
800 1.82820385008e-05
800 1.92892534768e-05
160 1.99428533027e-05
1600 2.19662227893e-05
1600 2.2204776577e-05
3360 2.35653547747e-05
800 2.49481654149e-05
3200 2.78383638891e-05
1600 2.86858287823e-05
1600 2.8892442724e-05
1600 2.90767654168e-05
3200 2.93720443217e-05
1600 2.96182074862e-05
3200 2.98176156806e-05
800 3.00129334768e-05
3200 3.01971326154e-05
3200 3.10108208431e-05
3200 3.11160833671e-05
800 3.1160655323e-05
1600 3.32310400299e-05
3200 3.34534047661e-05
3200 3.3593965705e-05
3200 3.4161516498e-05
800 3.48132062504e-05
3200 3.52789176486e-05
3200 3.56980327549e-05
3200 3.626589717e-05
3200 3.67681282835e-05
3200 3.68406034825e-05
1600 3.71513735588e-05
1600 3.85179367546e-05
1600 3.88784113512e-05
3200 3.91474492974e-05
1600 3.94144335783e-05
3200 3.96133298462e-05
3200 3.98031081509e-05
3200 4.03817010282e-05
3200 4.13204731846e-05
3200 4.14393358822e-05
3200 4.14969127255e-05
3200 4.15417195444e-05
3200 4.17644581034e-05
3200 4.19122501152e-05
3200 4.21970821306e-05
3200 4.22197772268e-05
3200 4.22552283576e-05
3200 4.23017486956e-05
1600 4.32446624633e-05
1600 4.35379260799e-05
800 4.37579283114e-05
3200 4.38073352915e-05
3200 4.39556183518e-05
1600 4.40117819236e-05
3200 4.40336921713e-05
1600 4.47346566961e-05
3200 4.486238693e-05
1600 4.51711933252e-05
3200 4.57539166558e-05
1600 4.65358779897e-05
3200 4.65623935015e-05
800 4.68577229042e-05
3200 4.69304475423e-05
1600 4.72153595456e-05
1600 4.73607323249e-05
3200 4.84571902006e-05
3200 4.85673486671e-05
1600 4.88315449103e-05
1600 4.89326550878e-05
1600 4.89987679027e-05
3200 4.90447332673e-05
800 4.9359968274e-05
1600 4.94983784279e-05
3200 4.98051205524e-05
1600 5.00298561878e-05
3200 5.02863632111e-05
1600 5.03750740273e-05
1600 5.07770954866e-05
3200 5.10856620655e-05
3200 5.14778850366e-05
3200 5.22987348596e-05
3200 5.26710239391e-05
3200 5.2809777423e-05
3200 5.2912265411e-05
3200 5.29643057515e-05
3200 5.30335559567e-05
1600 5.31388583594e-05
6400 5.37475014063e-05
1600 5.39584960666e-05
3200 5.41957207481e-05
3200 5.42615724947e-05
3200 5.46091444748e-05
3200 5.46610088568e-05
3200 5.47572709259e-05
800 5.48612638664e-05
1600 5.53555454722e-05
3200 5.53935530308e-05
1600 5.57945027142e-05
3200 5.63696596723e-05
3200 5.65140911919e-05
1600 5.68532284925e-05
3200 5.69970962029e-05
3200 5.70206751568e-05
3200 5.72351920845e-05
3200 5.72535711848e-05
3200 5.75521794921e-05
3200 5.78222093422e-05
1600 5.87010485411e-05
1600 5.87654319559e-05
1600 5.89955166523e-05
1600 5.91393395439e-05
3200 6.014614834e-05
3200 6.0638098932e-05
1600 6.11729643474e-05
1600 6.16764124841e-05
3200 6.18413023286e-05
3200 6.2082118382e-05
1600 6.27159210449e-05
1600 6.28053697875e-05
1600 6.30236118996e-05
3200 6.32143438934e-05
1600 6.32992396582e-05
3200 6.66276328135e-05
1600 6.66818551539e-05
6400 6.73606483313e-05
3200 6.8123561896e-05
1600 6.81786708708e-05
1600 6.8354799963e-05
1600 6.83779099312e-05
3200 6.84017679109e-05
3200 6.85347796611e-05
3200 6.88735614269e-05
1600 6.89334923042e-05
3200 6.92120752184e-05
3200 6.94819470204e-05
3200 6.96358674634e-05
1600 6.97733583567e-05
3200 6.98686214931e-05
1600 7.03021634919e-05
800 7.04635383448e-05
800 7.15972282091e-05
3200 7.24785425797e-05
3200 7.25990318199e-05
3200 7.2784613862e-05
3200 7.30427419407e-05
3200 7.31329890434e-05
3200 7.32939541574e-05
3200 7.35344700266e-05
3200 7.37734339534e-05
3200 7.40842106973e-05
4800 7.41472181619e-05
3200 7.46838326343e-05
3200 7.50215526777e-05
3200 7.52042429788e-05
1600 7.52428356482e-05
3200 7.55649429339e-05
3200 7.59149662608e-05
3200 7.63407355961e-05
3200 7.67847809685e-05
3200 7.68725266129e-05
3200 7.70594458908e-05
800 7.72316197352e-05
3200 7.73299863841e-05
800 7.76320128749e-05
3200 7.82701794991e-05
3200 7.82889689221e-05
3200 7.85934546223e-05
3200 7.92469750595e-05
3200 7.93694053523e-05
3200 7.95554228657e-05
3200 7.99231448571e-05
3200 8.00110073352e-05
3200 8.08762205877e-05
3200 8.10287784387e-05
3200 8.21210544227e-05
1600 8.27997645267e-05
3200 8.30827142434e-05
3200 8.30995904351e-05
3200 8.3302314911e-05
3200 8.3353215078e-05
1600 8.42040528555e-05
3200 8.53321585451e-05
3200 8.55439892893e-05
1600 8.64117808646e-05
1600 8.77646935347e-05
3200 8.78047132491e-05
160 8.8687961932e-05
3200 8.90411698279e-05
3200 8.91742833168e-05
1600 9.00164984319e-05
3200 9.02441269579e-05
3200 9.05270222873e-05
3200 9.07094317278e-05
800 9.11662831216e-05
4000 9.20054730037e-05
3200 9.28230051554e-05
1600 9.3373754833e-05
3200 9.44918626723e-05
3200 9.49209554449e-05
3200 9.5120976313e-05
3200 9.54957405817e-05
1600 9.58717525919e-05
1600 9.62575217711e-05
1600 9.63176306041e-05
3200 9.65276032888e-05
3200 9.68255641537e-05
3200 9.69139826429e-05
3200 9.75650032575e-05
3200 9.77521469941e-05
3200 9.77982370512e-05
3200 9.81435561209e-05
3200 9.88688746088e-05
1600 9.9022251898e-05
3200 9.92864251933e-05
1600 0.000100128693449
3200 0.000100167029846
3200 0.00010041510924
1600 0.000101180870692
1600 0.000101832017724
1600 0.000102266769424
3200 0.000102768835219
3200 0.000103177881493
3200 0.000103649563343
3200 0.000104574657816
1600 0.000105314195541
1600 0.000105910728467
1600 0.000106111154072
6400 0.000106173081983
3200 0.000106278940182
1600 0.000106464841166
3200 0.000108728680326
1600 0.000108755429708
3200 0.00010900401936
1600 0.00010906286038
3200 0.000110513236023
1600 0.000110899700038
3200 0.000111557936918
3200 0.000112707071564
3200 0.000113062762824
3200 0.000113148291262
1600 0.000113571947633
3200 0.000114608381676
3200 0.000115042757006
3200 0.000115170738669
3200 0.000116603247076
1600 0.000116883576577
3200 0.000117734330307
3200 0.00011919741529
1600 0.000119316571921
800 0.00012004786522
3600 0.000120679337549
3200 0.000120848733142
3200 0.000121131820481
1600 0.000122161316244
3200 0.000123570318114
1600 0.00012379181374
3520 0.000124295569252
3200 0.000124509910398
3200 0.000124780371536
3200 0.000127000056855
3200 0.00012729287205
1600 0.000127807121253
3200 0.000128524450443
3200 0.000128809475995
3200 0.000129494272342
1600 0.000130000326265
1600 0.000132768013907
1600 0.000134462402694
6400 0.000134830465511
3200 0.000135224610407
3200 0.000135467390035
3200 0.000137472499832
6400 0.000138150847181
3200 0.000138242426113
1600 0.000140791529803
800 0.00014314158823
800 0.000143549396991
3200 0.000145358404119
1600 0.000146777202935
1600 0.000147432383096
3200 0.000147569594171
3200 0.000147972312975
3200 0.000148382866599
400 0.000148413654307
3200 0.000148859955505
1600 0.000149136537684
1600 0.000152778068324
3200 0.00015330721265
3200 0.000153417813156
3200 0.000153594568388
3200 0.000153861310755
1600 0.000154522647087
3200 0.000156013361365
3200 0.000156490002269
3200 0.000157285304546
3200 0.000157896190172
1600 0.000158951656776
800 0.000160236205536
1600 0.000161541621295
1600 0.000162709917697
3200 0.000163428405053
3200 0.000164127180143
3200 0.000166852019748
3200 0.000170594208441
3200 0.000171221316689
800 0.000177296637352
1600 0.000178120960752
3200 0.000179010087763
3200 0.000179483607339
3200 0.000180481930664
1600 0.000182192653635
3200 0.000183112821856
3360 0.000186316649982
3200 0.000194455152552
1600 0.000195514862791
3200 0.000196217586855
4800 0.000197664089982
3200 0.000199488716071
3200 0.00020223758984
800 0.000203461219849
3200 0.000204347766934
1600 0.000205102947972
3200 0.000205891227106
3200 0.000211435377429
1600 0.000211686616945
3200 0.000215321812098
800 0.000217825858357
3200 0.000219147088161
3200 0.000222499105808
1600 0.000226930040389
3200 0.000230201342785
1600 0.000231816862801
3200 0.000232085311206
3200 0.000234456435939
1600 0.000234594880516
3200 0.000234666961178
3200 0.000236562833482
3200 0.000236865701019
1600 0.000239327140715
800 0.000241810481813
3200 0.000248219315886
1600 0.000253062416691
3200 0.000253985986722
1600 0.000256545816505
3200 0.000259442253422
3200 0.000263306434711
3200 0.000267085140006
1600 0.00027377714976
3200 0.00028546028292
3200 0.000290546312806
1600 0.000290924553501
3200 0.000299513545568
400 0.000304250017419
3200 0.000306855231293
3200 0.000315130401926
1600 0.000315754916528
3200 0.000315925648266
3200 0.000317393229082
3200 0.000318748324887
3200 0.00032694990828
1600 0.000327536932409
3200 0.000337198553897
3200 0.000339817866646
1600 0.000340437329651
3200 0.000342901507356
3200 0.000350775062423
3200 0.00035776555657
1600 0.000359063534004
1600 0.000363199363615
1600 0.000365507339087
3200 0.000369915332885
400 0.000372350358641
1600 0.000373599730635
1600 0.000378723939753
3200 0.00039363812194
3200 0.000434463388176
3200 0.000451395684439
1600 0.000458113940914
1600 0.000477453000759
3200 0.000481227543008
1600 0.000490968647278
1600 0.0004946245838
1600 0.000510957895686
1600 0.000532743560575
3200 0.000535981542651
1600 0.0005453348801
800 0.000568182727666
1600 0.000569737716892
1600 0.000582020325904
3200 0.000607260637165
400 0.000625865926655
3200 0.000646767719002
1600 0.000657429957824
1600 0.00068734474457
800 0.000698405199503
1600 0.0007091606832
3200 0.000715746418356
1600 0.000720092901948
1600 0.0007309265439
1600 0.000884974210123
3200 0.000922446147196
800 0.00098073815106
800 0.00101266766978
1600 0.00120807432874
1600 0.0012544061977
3200 0.0012741712511
1600 0.00138597627159
3200 0.00140935243745
400 0.00150174346316
3200 0.001879322317
1600 0.00228031297489
800 0.00355121092079
1600 0.00361807416899
800 0.0042993971218
800 0.00483160491448
800 0.00843410987824
400 0.0253683745615
 16 0.183809584347





